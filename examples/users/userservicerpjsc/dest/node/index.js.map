{"version":3,"sources":["webpack://userservicerpjsc/webpack/universalModuleDefinition","webpack://userservicerpjsc/webpack/bootstrap","webpack://userservicerpjsc/./src/app.js","webpack://userservicerpjsc/external {\"commonjs\":\"axios\",\"commonjs2\":\"axios\",\"amd\":\"axios\",\"root\":\"_\"}","webpack://userservicerpjsc/external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\",\"root\":\"_\"}","webpack://userservicerpjsc/external {\"commonjs\":\"safe-buffer\",\"commonjs2\":\"safe-buffer\",\"amd\":\"safe-buffer\",\"root\":\"_\"}"],"names":["JSONErrorResponse","FromPromise","NewRequest","PokeClient","PokeAgainClient","GetClient","GetUsersMethodUserSliceFactory","GetUsersClient","CreateMethodUserFactory","CreateMethodNewUserFactory","CreateClient","GetByClient","CreateUserMethodUserFactory","CreateUserMethodNewUserFactory","CreateUserClient","GetUserMethodUserFactory","GetUserClient","buffer","require","lodash","axios","BaseServiceName","MethodServiceName","ServiceCodePath","ServiceCodePathName","URLError","ActionError","ActionPanicError","MethodTypeError","AcceptTypeUnknownError","RequestDecodingError","ResponseEncodingError","type","code","err","message","meta","Type","Code","Err","Message","Meta","JSONEncoding","Object","freeze","Decode","req","res","body","Promise","EncodePromise","resolve","reject","headers","indexOf","Error","Encode","model","setHeader","encoded","JSON","stringify","write","e","end","HTTPTransport","Do","timeout","ops","request","method","data","url","joinURL","base","merge","then","isError","requestRedirected","requestFailed","requestFacedInternalIssues","getJSONError","catch","response","msg","original_error","rx","ry","reqObj","key","value","push","join","to","toURL","startsWith","substring","endsWith","trim","prefixSlash","c","suffixSlash","status","requestSucceeded","Buffer","toString","parse","PokeServiceRoute","PokeServiceRoutePath","PokeContractSource","options","BeforeRequest","Headers","Encoder","Decoder","Transport","ServiceAddr","PokeRPC","GetUserPromise","Timeout","resObj","PokeAgainServiceRoute","PokeAgainServiceRoutePath","PokeAgainContractSource","PokeAgainRPC","GetServiceRoute","GetServiceRoutePath","GetContractSource","GetRPC","resModel","GetUsersServiceRoute","GetUsersServiceRoutePath","GetUsersContractSource","GetUsersRPC","CreateServiceRoute","CreateServiceRoutePath","CreateContractSource","CreateRPC","GetByServiceRoute","GetByServiceRoutePath","GetByContractSource","GetByRPC","CreateUserServiceRoute","CreateUserServiceRoutePath","CreateUserContractSource","CreateUserRPC","GetUserServiceRoute","GetUserServiceRoutePath","GetUserContractSource","GetUserRPC"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"axios\"), require(\"lodash\"), require(\"safe-buffer\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"axios\", \"lodash\", \"safe-buffer\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"userservicerpjsc\"] = factory(require(\"axios\"), require(\"lodash\"), require(\"safe-buffer\"));\n\telse\n\t\troot[\"userservicerpjsc\"] = factory(root[\"_\"], root[\"_\"], root[\"_\"]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE_axios__, __WEBPACK_EXTERNAL_MODULE_lodash__, __WEBPACK_EXTERNAL_MODULE_safe_buffer__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/app.js\");\n","// All code below are auto-generated and should not be edited by hand.\n// See https://github.com/gokit/rpkit for more info.\n  \n\n// const URL = require(\"url-parse\");\n// const httpStatus = require(\"statuses\");\n// const request = require(\"request\");\nconst buffer = require(\"safe-buffer\");\nconst lodash = require(\"lodash\");\nconst axios = require(\"axios\");\n\n// BaseServiceName defines the base name of service root.\nexport const BaseServiceName = \"users\"\n\n// MethodServiceName defines the complete name of this giving API service.\nexport const MethodServiceName = \"users/UserService\";\n\n// ServiceCodePath defines the path to this generated package which contains the implemented service methods.\nexport const ServiceCodePath = \"github.com/gokit/rpkit/examples/users/userservicerp\";\n\n// ServiceCodePathName defines the name giving to\n// this package.\nexport const ServiceCodePathName = \"userservicerp\";\n\n// error type strings\nexport const URLError = \"url_error\";\nexport const ActionError = \"action_error\";\nexport const ActionPanicError = \"action_panic_error\";\nexport const MethodTypeError = \"method_type_error\";\nexport const AcceptTypeUnknownError = \"accept_type_unknown_error\";\nexport const RequestDecodingError = \"request_decoding_error\";\nexport const ResponseEncodingError = \"response_encoding_error\";\n\n// JSONErrorResponse defines a structure to contain error message data\n// delivered by the server.\nexport function JSONErrorResponse(type, code, err, message, meta) {\n    return {\n        Type: type,\n        Code: code,\n        Err: err,\n        Message: message,\n        Meta: meta,\n    };\n}\n\n// JSONEncoding defines a JSON encoding implementation\n// meant to work with the Request from NewRequest and\n// response from using https://github.com/axios/axios\n// as transport.\nexport const JSONEncoding = Object.freeze({\n    Decode: function(req, res, body) {\n        return new Promise(function EncodePromise(resolve, reject) {\n            if (res.headers[\"content-type\"].indexOf(\"application/json\") === -1) {\n                reject(new Error(\"request content type must be application/json\"));\n                return;\n            }\n\n            // Since we are using axios, any response that is valid JSON\n            // will immediately get parsed, to just return.\n            resolve(body);\n        });\n    },\n    Encode: function(req, model) {\n        return new Promise(function EncodePromise(resolve, reject) {\n            req.setHeader(\"Content-Type\", \"application/json\");\n            req.setHeader(\"Accept\", \"application/json\");\n\n            try {\n                const encoded = JSON.stringify(model);\n                req.write(encoded);\n            } catch (e) {\n                reject(e);\n                return;\n            }\n\n            req.end();\n            resolve(req);\n        });\n    },\n});\n\n// HTTPTransport implements a custom http transport for handling\n// request processing and response returning. This allows user\n// to plug a custom http request transport handling layer\n// as desired. An HTTPTransport must always return;\n// a promise. The http transport uses https://github.com/axios/axios\n// underneath.\nexport const HTTPTransport = Object.freeze({\n    Do: function(req, timeout) {\n        const ops = axios.request({\n            method: \"POST\",\n            timeout: timeout,\n            data: req.body,\n            url: joinURL(req.base, req.url),\n            headers: lodash.merge(req.headers, {\"X-Requested-With-Lib\": \"axios (https://github.com/axios/axios)\"}),\n        })\n\n        return ops.then((res) => {\n            if(!res){\n                return Promise.reject(new Error(\"received null/nil response object\"));\n            }\n\n            if(isError(res)){\n                return Promise.reject(res)\n            }\n\n            if (requestRedirected(res) || requestFailed(res) || requestFacedInternalIssues(res)) {\n                return Promise.reject(getJSONError(res.data));\n            }\n\n            return {\n                res: res,\n                body: res.data,\n            };\n        }).catch((e) =>{\n            if(e.response && e.response.data){\n                const msg = getJSONError(e.response.data);\n                msg.original_error = e;\n                return Promise.reject(msg);\n            }\n            return Promise.reject(e);\n        });\n    },\n});\n\n\n// FromPromise returns a new Promise with the\n// function arguments passed to it. This\n// is provided to allow clients use same\n// promise as package has their are internal\n// checks and use of `instanceof` with the\n// Promise used.\nexport function FromPromise(rx, ry) {\n    return new Promise(rx, ry);\n}\n\n// NewRequest returns a object containing basic data related\n// to a outgoing request with associated headers to be sent along.\n// It is to be used by http transport for fullfilling a request.\nexport function NewRequest(base, url, headers) {\n    const reqObj = {\n        base: base,\n        url: url,\n        headers: headers || {},\n        body: null,\n        setHeader: (key, value) => {\n            reqObj.headers[key] = value;\n        },\n        write: (data) => {\n            if (reqObj.body) {\n                reqObj.push(data);\n                return;\n            }\n\n            reqObj.body = [];\n            reqObj.body.push(data);\n        },\n        end: () => {\n            if (reqObj.body) reqObj.body = reqObj.body.join(\"\");\n        },\n    };\n\n    return reqObj;\n}\n\nfunction isError(err) {\n    if (lodash.isError(err)) {\n        return true;\n    }\n    return (err instanceof Error);\n}\n\n// joinURL joins provided string paths into a whole,\n// ensuring to add the necessary slash in between parts.\nfunction joinURL(base, to) {\n    let toURL = to;\n    if (toURL.startsWith(\"/\")) {\n        toURL = to.substring(1);\n    }\n\n    if (base.endsWith(\"/\")) {\n        return (`${base}${toURL}`).trim();\n    }\n\n    return (`${base}/${toURL}`).trim();\n}\n\n// prefixSlash prefixes a forward slash to the beginning of provided\n// string.\nfunction prefixSlash(c) {\n    if (c.startsWith(\"/\")) {\n        return c;\n    }\n    return `/${c}`;\n}\n\n// suffixSlash suffixes a forward slash to end of provided\n// string.\nfunction suffixSlash(c) {\n    if (c.endsWith(\"/\")) {\n        return c;\n    }\n    return `${c}`;\n}\n\nfunction requestRedirected(res) {\n    if (res.status >= 300 && res.status <= 308) {\n        return true;\n    }\n    return false;\n}\n\nfunction requestFailed(res) {\n    if (res.status >= 400 && res.status < 500) {\n        return true;\n    }\n    return false;\n}\n\nfunction requestFacedInternalIssues(res) {\n    if (res.status >= 500 && res.status < 600) {\n        return true;\n    }\n    return false;\n}\n\nfunction requestSucceeded(res) {\n    if (res.status >= 200 && res.status <= 299) {\n        return true;\n    }\n    return false;\n}\n\nfunction getJSONError(body) {\n    if (typeof body === \"object\") {\n        return body;\n    }\n\n    let res = null;\n    if (body instanceof buffer.Buffer) {\n        try {\n            const data = body.toString(\"utf8\");\n            res = JSON.parse(data);\n        } catch (e) {\n            return e;\n        }\n        return res;\n    }\n\n    try {\n        res = JSON.parse(body);\n    } catch (e) {\n        return e;\n    }\n\n    return res;\n}\n\n// /////////////////////////////////////////////////////////////////\n// RP: No Arguments and No Return Methods\n// Method: Poke\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.Poke\n// /////////////////////////////////////////////////////////////////\n\n// PokeServiceRoute defines the route for the Poke method.\nexport const PokeServiceRoute = \"users.UserService/Poke\";\n\n// PokeServiceRoutePath defines the full method path for the Poke method.\nexport const PokeServiceRoutePath = \"/rpkit/users.UserService/Poke\";\n\n// PokeContractSource contains the source version of expected method contract.\nexport const PokeContractSource = `type PokeMethodContract interface {\n\tPoke() \n}`;\n\n// PokeClient returns a RPC method to be called to handle requests\n// for the Poke method of \"github.com/gokit/rpkit/examples/users\".\nexport function PokeClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {}\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function PokeRPC() {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = NewRequest(options.ServiceAddr, PokeServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\");\n            req.setHeader(\"X-Service\", BaseServiceName);\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\");\n            req.setHeader(\"X-Method-Client\", \"Poke\");\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName);\n            req.setHeader(\"X-API-Client-Route\", PokeServiceRoute);\n            req.setHeader(\"X-API-Client-Route-Path\", PokeServiceRoutePath);\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\");\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            options.Transport.Do(req, options.Timeout).then((resObj) => {\n                resolve(null);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n}\n\n\n\n// /////////////////////////////////////////////////////////////////\n// RP: Error Returning methods\n// Method: PokeAgain\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.PokeAgain\n// /////////////////////////////////////////////////////////////////\n\n// PokeAgainServiceRoute defines the route for the PokeAgain method.\nexport const PokeAgainServiceRoute = \"users.UserService/PokeAgain\";\n\n// PokeAgainServiceRoutePath defines the full method path for the PokeAgain method.\nexport const PokeAgainServiceRoutePath = \"/rpkit/users.UserService/PokeAgain\";\n\n// PokeAgainContractSource contains the source version of expected method contract.\nexport const PokeAgainContractSource = `type PokeAgainMethodContract interface {\n\tPokeAgain()  error  \n}`;\n\n// PokeAgainClient returns a RPC method to be called to handle requests\n// for the PokeAgain method of \"github.com/gokit/rpkit/examples/users\".\nexport function PokeAgainClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {}\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function PokeAgainRPC() {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = NewRequest(options.ServiceAddr, PokeAgainServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\");\n            req.setHeader(\"X-Service\", BaseServiceName);\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\");\n            req.setHeader(\"X-Method-Client\", \"PokeAgain\");\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName);\n            req.setHeader(\"X-API-Client-Route\", PokeAgainServiceRoute);\n            req.setHeader(\"X-API-Client-Route-Path\", PokeAgainServiceRoutePath);\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\");\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            options.Transport.Do(req, options.Timeout).then((resObj) => {\n                resolve(null);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n}\n\n\n\n// /////////////////////////////////////////////////////////////////\n// RP: Output with Returning Error methods\n// Method: Get\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.Get\n// /////////////////////////////////////////////////////////////////\n\n// GetServiceRoute defines the route for the Get method.\nexport const GetServiceRoute = \"users.UserService/Get\";\n\n// GetServiceRoutePath defines the full method path for the Get method.\nexport const GetServiceRoutePath = \"/rpkit/users.UserService/Get\";\n\n// GetContractSource contains the source version of expected method contract.\nexport const GetContractSource = `type GetMethodContract interface {\n\tGet(var1 context.Context)  (int,error)  \n}`;\n\n\n// GetClient returns a RPC method to be called to handle requests\n// for the Get method of \"github.com/gokit/rpkit/examples/users\".\nexport function GetClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {}\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function GetRPC() {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = NewRequest(options.ServiceAddr, GetServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\");\n            req.setHeader(\"X-Service\", BaseServiceName);\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\");\n            req.setHeader(\"X-Method-Client\", \"Get\");\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName);\n            req.setHeader(\"X-API-Client-Route\", GetServiceRoute);\n            req.setHeader(\"X-API-Client-Route-Path\", GetServiceRoutePath);\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\");\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            options.Transport.Do(req, options.Timeout).then((resObj) => {\n                return options.Decoder.Decode(req, resObj.res, resObj.body);\n            }).then((resModel) => {\n                resolve(resModel);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n}\n\n\n\n// /////////////////////////////////////////////////////////////////\n// RP: Output Returning No Error methods\n// Method: GetUsers\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.GetUsers\n// /////////////////////////////////////////////////////////////////\n\n// GetUsersServiceRoute defines the route for the GetUsers method.\nexport const GetUsersServiceRoute = \"users.UserService/GetUsers\";\n\n// GetUsersServiceRoutePath defines the full method path for the GetUsers method.\nexport const GetUsersServiceRoutePath = \"/rpkit/users.UserService/GetUsers\";\n\n// GetUsersContractSource contains the source version of expected method contract.\nexport const GetUsersContractSource = `type GetUsersMethodContract interface {\n\tGetUsers(var1 context.Context)  []users.User  \n}`;\n\n\n// GetUsersMethodUserSliceFactory defines a function to\n// return a default object containing default field values of return value of\n// GetUsers method.\nexport function GetUsersMethodUserSliceFactory(){\n    return JSON.parse(\"{\\n\\n\\n    \\\"cid\\\":\\t0.0,\\n\\n    \\\"id\\\":\\t0,\\n\\n    \\\"name\\\":\\t\\\"\\\",\\n\\n    \\\"addr\\\":\\t\\\"\\\"\\n\\n}\");\n}\n\n\n// GetUsersClient returns a RPC method to be called to handle requests\n// for the GetUsers method of \"github.com/gokit/rpkit/examples/users\".\nexport function GetUsersClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {}\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function GetUsersRPC() {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = NewRequest(options.ServiceAddr, GetUsersServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\");\n            req.setHeader(\"X-Service\", BaseServiceName);\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\");\n            req.setHeader(\"X-Method-Client\", \"GetUsers\");\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName);\n            req.setHeader(\"X-API-Client-Route\", GetUsersServiceRoute);\n            req.setHeader(\"X-API-Client-Route-Path\", GetUsersServiceRoutePath);\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\");\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            options.Transport.Do(req, options.Timeout).then((resObj) => {\n                return options.Decoder.Decode(req, resObj.res, resObj.body);\n            }).then((resModel) => {\n                resolve(resModel);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n}\n\n\n\n\n\n// /////////////////////////////////////////////////////////////////\n// RP: Input And Output Returning Error methods\n// Method: Create\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.Create\n// /////////////////////////////////////////////////////////////////\n\n// CreateServiceRoute defines the route for the Create method.\nexport const CreateServiceRoute = \"users.UserService/Create\";\n\n// CreateServiceRoutePath defines the full method path for the Create method.\nexport const CreateServiceRoutePath = \"/users/UserService/Create\";\n\n// CreateContractSource contains the source version of expected method contract.\nexport const CreateContractSource = `type CreateMethodContract interface {\n\tCreate(var1 context.Context,var2 users.NewUser)  (users.User,error)  \n}`;\n\n\n// CreateMethodUserFactory defines a function to\n// return a default object containing default field values of return value of\n// Create method.\nexport function CreateMethodUserFactory(){\n    return JSON.parse(\"{\\n\\n\\n    \\\"id\\\":\\t0,\\n\\n    \\\"name\\\":\\t\\\"\\\",\\n\\n    \\\"addr\\\":\\t\\\"\\\",\\n\\n    \\\"cid\\\":\\t0.0\\n\\n}\");\n}\n\n\n\n// CreateMethodNewUserFactory defines a function to\n// return a default object containing default field values of argument of\n// Create method. \nexport function CreateMethodNewUserFactory(){\n    return JSON.parse(\"{\\n\\n\\n    \\\"name\\\":\\t\\\"\\\"\\n\\n}\");\n}\n\n\n// CreateClient returns a RPC method to be called to handle requests\n// for the Create method of \"github.com/gokit/rpkit/examples/users\".\nexport function CreateClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {}\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function CreateRPC(model) {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = NewRequest(options.ServiceAddr, CreateServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\");\n            req.setHeader(\"X-Service\", BaseServiceName);\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\");\n            req.setHeader(\"X-Method-Client\", \"Create\");\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName);\n            req.setHeader(\"X-API-Client-Route\", CreateServiceRoute);\n            req.setHeader(\"X-API-Client-Route-Path\", CreateServiceRoutePath);\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\");\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            const encoded = options.Encoder.Encode(req, model);\n            if (!(encoded instanceof Promise)) {\n                reject(new Error(\"Encoder.Encode does not return a Promise\"));\n                return;\n            }\n\n            encoded.then((req) => {\n                return options.Transport.Do(req, options.Timeout);\n            }).then((resObj) => {\n                return options.Decoder.Decode(req, resObj.res, resObj.body);\n            }).then((resModel) => {\n                resolve(resModel);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n}\n\n// /////////////////////////////////////////////////////////////////\n// RP: Input And Output Returning Error methods\n// Method: GetBy\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.GetBy\n// /////////////////////////////////////////////////////////////////\n\n// GetByServiceRoute defines the route for the GetBy method.\nexport const GetByServiceRoute = \"users.UserService/GetBy\";\n\n// GetByServiceRoutePath defines the full method path for the GetBy method.\nexport const GetByServiceRoutePath = \"/users/UserService/GetBy\";\n\n// GetByContractSource contains the source version of expected method contract.\nexport const GetByContractSource = `type GetByMethodContract interface {\n\tGetBy(var1 context.Context,var2 string)  (int,error)  \n}`;\n\n\n\n\n\n// GetByClient returns a RPC method to be called to handle requests\n// for the GetBy method of \"github.com/gokit/rpkit/examples/users\".\nexport function GetByClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {}\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function GetByRPC(model) {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = NewRequest(options.ServiceAddr, GetByServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\");\n            req.setHeader(\"X-Service\", BaseServiceName);\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\");\n            req.setHeader(\"X-Method-Client\", \"GetBy\");\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName);\n            req.setHeader(\"X-API-Client-Route\", GetByServiceRoute);\n            req.setHeader(\"X-API-Client-Route-Path\", GetByServiceRoutePath);\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\");\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            const encoded = options.Encoder.Encode(req, model);\n            if (!(encoded instanceof Promise)) {\n                reject(new Error(\"Encoder.Encode does not return a Promise\"));\n                return;\n            }\n\n            encoded.then((req) => {\n                return options.Transport.Do(req, options.Timeout);\n            }).then((resObj) => {\n                return options.Decoder.Decode(req, resObj.res, resObj.body);\n            }).then((resModel) => {\n                resolve(resModel);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n}\n\n// /////////////////////////////////////////////////////////////////\n// RP: Input And Output Returning Error methods\n// Method: CreateUser\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.CreateUser\n// /////////////////////////////////////////////////////////////////\n\n// CreateUserServiceRoute defines the route for the CreateUser method.\nexport const CreateUserServiceRoute = \"users.UserService/CreateUser\";\n\n// CreateUserServiceRoutePath defines the full method path for the CreateUser method.\nexport const CreateUserServiceRoutePath = \"/users/UserService/CreateUser\";\n\n// CreateUserContractSource contains the source version of expected method contract.\nexport const CreateUserContractSource = `type CreateUserMethodContract interface {\n\tCreateUser(var1 users.NewUser)  (users.User,error)  \n}`;\n\n\n// CreateUserMethodUserFactory defines a function to\n// return a default object containing default field values of return value of\n// CreateUser method.\nexport function CreateUserMethodUserFactory(){\n    return JSON.parse(\"{\\n\\n\\n    \\\"cid\\\":\\t0.0,\\n\\n    \\\"id\\\":\\t0,\\n\\n    \\\"name\\\":\\t\\\"\\\",\\n\\n    \\\"addr\\\":\\t\\\"\\\"\\n\\n}\");\n}\n\n\n// CreateUserMethodNewUserFactory defines a function to\n// return a default object containing default field values of argument of\n// CreateUser method.\nexport function CreateUserMethodNewUserFactory(){\n    return JSON.parse(\"{\\n\\n\\n    \\\"name\\\":\\t\\\"\\\"\\n\\n}\");\n}\n\n\n\n// CreateUserClient returns a RPC method to be called to handle requests\n// for the CreateUser method of \"github.com/gokit/rpkit/examples/users\".\nexport function CreateUserClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {}\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function CreateUserRPC(model) {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = NewRequest(options.ServiceAddr, CreateUserServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\");\n            req.setHeader(\"X-Service\", BaseServiceName);\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\");\n            req.setHeader(\"X-Method-Client\", \"CreateUser\");\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName);\n            req.setHeader(\"X-API-Client-Route\", CreateUserServiceRoute);\n            req.setHeader(\"X-API-Client-Route-Path\", CreateUserServiceRoutePath);\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\");\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            const encoded = options.Encoder.Encode(req, model);\n            if (!(encoded instanceof Promise)) {\n                reject(new Error(\"Encoder.Encode does not return a Promise\"));\n                return;\n            }\n\n            encoded.then((req) => {\n                return options.Transport.Do(req, options.Timeout);\n            }).then((resObj) => {\n                return options.Decoder.Decode(req, resObj.res, resObj.body);\n            }).then((resModel) => {\n                resolve(resModel);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n}\n\n// /////////////////////////////////////////////////////////////////\n// RP: Input And Output Returning Error methods\n// Method: GetUser\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.GetUser\n// /////////////////////////////////////////////////////////////////\n\n// GetUserServiceRoute defines the route for the GetUser method.\nexport const GetUserServiceRoute = \"users.UserService/GetUser\";\n\n// GetUserServiceRoutePath defines the full method path for the GetUser method.\nexport const GetUserServiceRoutePath = \"/users/UserService/GetUser\";\n\n// GetUserContractSource contains the source version of expected method contract.\nexport const GetUserContractSource = `type GetUserMethodContract interface {\n\tGetUser(var1 int)  (users.User,error)  \n}`;\n\n\n// GetUserMethodUserFactory defines a function to\n// return a default object containing default field values of return value of\n// GetUser method.\nexport function GetUserMethodUserFactory(){\n    return JSON.parse(\"{\\n\\n\\n    \\\"id\\\":\\t0,\\n\\n    \\\"name\\\":\\t\\\"\\\",\\n\\n    \\\"addr\\\":\\t\\\"\\\",\\n\\n    \\\"cid\\\":\\t0.0\\n\\n}\");\n}\n\n\n\n\n// GetUserClient returns a RPC method to be called to handle requests\n// for the GetUser method of \"github.com/gokit/rpkit/examples/users\".\nexport function GetUserClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {}\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function GetUserRPC(model) {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = NewRequest(options.ServiceAddr, GetUserServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\");\n            req.setHeader(\"X-Service\", BaseServiceName);\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\");\n            req.setHeader(\"X-Method-Client\", \"GetUser\");\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName);\n            req.setHeader(\"X-API-Client-Route\", GetUserServiceRoute);\n            req.setHeader(\"X-API-Client-Route-Path\", GetUserServiceRoutePath);\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\");\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            const encoded = options.Encoder.Encode(req, model);\n            if (!(encoded instanceof Promise)) {\n                reject(new Error(\"Encoder.Encode does not return a Promise\"));\n                return;\n            }\n\n            encoded.then((req) => {\n                return options.Transport.Do(req, options.Timeout);\n            }).then((resObj) => {\n                return options.Decoder.Decode(req, resObj.res, resObj.body);\n            }).then((resModel) => {\n                resolve(resModel);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n}\n\n\n","module.exports = __WEBPACK_EXTERNAL_MODULE_axios__;","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;","module.exports = __WEBPACK_EXTERNAL_MODULE_safe_buffer__;"],"sourceRoot":""}