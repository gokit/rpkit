{"version":3,"sources":["webpack://userservicerpjsc/webpack/universalModuleDefinition","webpack://userservicerpjsc/webpack/bootstrap","webpack://userservicerpjsc/./src/app.js","webpack://userservicerpjsc/external {\"commonjs\":\"axios\",\"commonjs2\":\"axios\",\"amd\":\"axios\",\"root\":\"_\"}","webpack://userservicerpjsc/external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\",\"root\":\"_\"}","webpack://userservicerpjsc/external {\"commonjs\":\"safe-buffer\",\"commonjs2\":\"safe-buffer\",\"amd\":\"safe-buffer\",\"root\":\"_\"}"],"names":["JSONErrorResponse","NewRequest","GetClient","GetUsersMethodUserFactory","GetUsersClient","CreateMethodUserFactory","CreateMethodNewUserFactory","CreateClient","GetByClient","CreateUserMethodUserFactory","CreateUserMethodNewUserFactory","CreateUserClient","GetUserMethodUserFactory","GetUserClient","buffer","require","lodash","axios","BaseServiceName","MethodServiceName","ServiceCodePath","ServiceCodePathName","URLError","ActionError","ActionPanicError","MethodTypeError","AcceptTypeUnknownError","RequestDecodingError","ResponseEncodingError","type","code","err","message","meta","Type","Code","Err","Message","Meta","JSONEncoding","Object","freeze","Decode","req","res","body","Promise","EncodePromise","resolve","reject","headers","indexOf","Error","Buffer","content","JSON","parse","toString","e","Body","Encode","model","setHeader","encoded","stringify","write","HTTPTransport","Do","timeout","RequestPromise","request","method","data","join","url","joinURL","base","merge","catch","response","msg","getJSONError","axiosError","then","requestFacedInternalIssues","requestFailed","requestRedirected","reqObj","key","value","push","to","endsWith","prefixSlash","c","status","requestSucceeded","GetServiceRoute","GetServiceRoutePath","GetContractSource","options","BeforeRequest","Headers","Encoder","Decoder","Transport","ServiceAddr","GetRPC","GetUserPromise","newRequest","resObj","resModel","GetUsersServiceRoute","GetUsersServiceRoutePath","GetUsersContractSource","GetUsersRPC","CreateServiceRoute","CreateServiceRoutePath","CreateContractSource","CreateRPC","GetByServiceRoute","GetByServiceRoutePath","GetByContractSource","GetByRPC","CreateUserServiceRoute","CreateUserServiceRoutePath","CreateUserContractSource","CreateUserRPC","GetUserServiceRoute","GetUserServiceRoutePath","GetUserContractSource","GetUserRPC"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"axios\"), require(\"lodash\"), require(\"safe-buffer\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"axios\", \"lodash\", \"safe-buffer\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"userservicerpjsc\"] = factory(require(\"axios\"), require(\"lodash\"), require(\"safe-buffer\"));\n\telse\n\t\troot[\"userservicerpjsc\"] = factory(root[\"_\"], root[\"_\"], root[\"_\"]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE_axios__, __WEBPACK_EXTERNAL_MODULE_lodash__, __WEBPACK_EXTERNAL_MODULE_safe_buffer__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/app.js\");\n","// All code below are auto-generated and should not be edited by hand.\n// See https://github.com/gokit/rpkit for more info.\n  \n\n// const URL = require(\"url-parse\");\n// const httpStatus = require(\"statuses\");\n// const request = require(\"request\");\nconst buffer = require(\"safe-buffer\");\nconst lodash = require(\"lodash\");\nconst axios = require(\"axios\");\n\n// BaseServiceName defines the base name of service root.\nexport const BaseServiceName = \"users\";\n\n// MethodServiceName defines the complete name of this giving API service.\nexport const MethodServiceName = \"users/UserService\";\n\n// ServiceCodePath defines the path to this generated package which contains the implemented service methods.\nexport const ServiceCodePath = \"github.com/gokit/rpkit/examples/users/userservicerp\";\n\n// ServiceCodePathName defines the name giving to\n// this package.\nexport const ServiceCodePathName = \"userservicerp\";\n\n// error type strings\nexport const URLError = \"url_error\";\nexport const ActionError = \"action_error\";\nexport const ActionPanicError = \"action_panic_error\";\nexport const MethodTypeError = \"method_type_error\";\nexport const AcceptTypeUnknownError = \"accept_type_unknown_error\";\nexport const RequestDecodingError = \"request_decoding_error\";\nexport const ResponseEncodingError = \"response_encoding_error\";\n\n// JSONErrorResponse defines a structure to contain error message data\n// delivered by the server.\nexport function JSONErrorResponse(type, code, err, message, meta) {\n    return {\n        Type: type,\n        Code: code,\n        Err: err,\n        Message: message,\n        Meta: meta,\n    }\n}\n\n// JSONEncoding defines a JSON encoding implementation\n// meant to work with the Request from NewRequest and\n// response from using https://github.com/axios/axios\n// as transport.\nexport const JSONEncoding = Object.freeze({\n    Decode: function(req, res, body) {\n        return new Promise(function EncodePromise(resolve, reject) {\n            if (res.headers[\"Content-Type\"].indexOf(\"application/json\") === -1) {\n                reject(new Error(\"request content type must be application/json\"));\n                return;\n            }\n\n            if (body instanceof buffer.Buffer) {\n                try {\n                    const content = JSON.parse(body.toString(\"utf8\"));\n                    resolve(content);\n                } catch (e) {\n                    reject(e);\n                }\n                return;\n            }\n\n            if (typeof body === \"string\") {\n                try {\n                    const content = JSON.parse(body);\n                    resolve(content);\n                } catch (e) {\n                    reject(e);\n                }\n                return;\n            };\n\n            if (typeof body === \"object\") {\n                resolve(body);\n                return;\n            }\n\n            reject({\n                Error: new Error(\"unknown content body received\"),\n                Body: body,\n            });\n        });\n    },\n    Encode: function(req, model) {\n        return new Promise(function EncodePromise(resolve, reject) {\n            req.setHeader(\"Content-Type\", \"application/json\");\n            req.setHeader(\"Accept\", \"application/json\");\n\n            try {\n                const encoded = JSON.stringify(model);\n                req.write(encoded);\n            } catch (e) {\n                reject(e);\n                return;\n            }\n\n            resolve(req);\n        });\n    },\n});\n\n// HTTPTransport implements a custom http transport for handling\n// request processing and response returning. This allows user\n// to plug a custom http request transport handling layer\n// as desired. An HTTPTransport must always return\n// a promise. The http transport uses https://github.com/axios/axios\n// underneath.\nexport const HTTPTransport = Object.freeze({\n    Do: function(req, timeout) {\n        return new Promise(function RequestPromise(resolve, reject) {\n            axios.request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\ttimeout: timeout,\n                data: req.body.join(\"\"),\n\t\t\t\turl: joinURL(req.base, req.url),\n                headers: lodash.merge(req.headers, {\"X-Requested-With-Lib\": \"axios (https://github.com/axios/axios)\"}),\n            }).catch((e) =>{\n                if(e.response && e.response.data){\n                    const msg = getJSONError(e.response.data);\n                    msg.axiosError = e;\n                    reject(msg);\n                    return;\n                }\n\n                reject(e);\n            }).then((res) => {\n                if (requestFacedInternalIssues(res)) {\n                    reject(getJSONError(res.data))\n                    return;\n                };\n\n                if (requestFailed(res)) {\n                    reject(getJSONError(res.data))\n                    return;\n                };\n\n                if (requestRedirected(res)) {\n                    reject(getJSONError(res.data))\n                    return;\n                };\n\n                resolve(Object.freeze({\n                    res: res,\n                    body: res.data,\n                }));\n            });\n        });\n    },\n});\n\n// NewRequest returns a object containing basic data related\n// to a outgoing request with associated headers to be sent along.\n// It is to be used by http transport for fullfilling a request.\nexport function NewRequest(base, url, headers) {\n    const reqObj = {\n        base: base,\n        url: url,\n        headers: headers ? headers : {},\n        body: null,\n        setHeader: (key, value) => {\n            reqObj.headers[key] = value;\n        },\n        write: (data) => {\n            if (reqObj.body) {\n                reqObj.push(data);\n                return;\n            }\n\n            reqObj.body = [];\n            reqObj.body.push(data);\n        },\n    };\n\n    return reqObj;\n};\n\n// joinURL joins provided string paths into a whole,\n// ensuring to add the necessary slash in between parts.\nfunction joinURL(base, to) {\n    if (base.endsWith(\"/\")) {\n        return `${base}${to}`;\n    }\n\n    return `${base}/${to}`;\n};\n\n// prefixSlash prefixes a forward slash to end of provided\n// string.\nfunction prefixSlash(c) {\n    if (c.endsWith(\"/\")) {\n        return c;\n    }\n    return `${c};`;\n};\n\nfunction requestRedirected(res) {\n    if (res.status >= 300 && res.status <= 308) {\n        return true;\n    }\n    return false;\n};\n\nfunction requestFailed(res) {\n    if (res.status >= 400 && res.status < 500) {\n        return true;\n    };\n    return false;\n};\n\nfunction requestFacedInternalIssues(res) {\n    if (res.status >= 500 && res.status < 600) {\n        return true;\n    };\n    return false;\n};\n\nfunction requestSucceeded(res) {\n    if (res.status >= 200 && res.status <= 299) {\n        return true;\n    };\n    return false;\n};\n\nfunction getJSONError(body) {\n    if (typeof body === \"object\") {\n        return body;\n    }\n\n    let res = null;\n    if (body instanceof buffer.Buffer) {\n        try {\n            const data = body.toString(\"utf8\");\n            res = JSON.parse(data);\n        } catch (e) {\n            return e;\n        }\n        return res;\n    }\n\n    try {\n        res = JSON.parse(body);\n    } catch (e) {\n        return e;\n    }\n\n    return res;\n};\n\n\n\n// /////////////////////////////////////////////////////////////////\n// RP: Output with Returning Error methods\n// Method: Get\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.Get\n// /////////////////////////////////////////////////////////////////\n\n// GetServiceRoute defines the route for the Get method.\nexport const GetServiceRoute = \"users.UserService/Get\";\n\n// GetServiceRoutePath defines the full method path for the Get method.\nexport const GetServiceRoutePath = \"/rpkit/users.UserService/Get\";\n\n// GetContractSource contains the source version of expected method contract.\nexport const GetContractSource = `type GetMethodContract interface {\n\tGet(var1 context.Context)  (int,error)  \n}\n`;\n\n\n// GetClient returns a RPC method to be called to handle requests\n// for the Get method of \"github.com/gokit/rpkit/examples/users\".\nexport function GetClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {};\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function GetRPC() {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = newRequest(options.ServiceAddr, GetServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\")\n            req.setHeader(\"X-Service\", BaseServiceName)\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\")\n            req.setHeader(\"X-Method-Client\", \"Get\")\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName)\n            req.setHeader(\"X-API-Client-Route\", GetServiceRoute)\n            req.setHeader(\"X-API-Client-Route-Path\", GetServiceRoutePath)\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\")\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            Promise.resolve(true).then(() => {\n                return options.Transport.Do(req);\n            }).then((resObj) => {\n                return options.Decoder.Decode(req, resObj.res, resObj.body);\n            }).then((resModel) => {\n                resolve(resModel);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n};\n\n\n\n// /////////////////////////////////////////////////////////////////\n// RP: Output Returning No Error methods\n// Method: GetUsers\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.GetUsers\n// /////////////////////////////////////////////////////////////////\n\n// GetUsersServiceRoute defines the route for the GetUsers method.\nexport const GetUsersServiceRoute = \"users.UserService/GetUsers\";\n\n// GetUsersServiceRoutePath defines the full method path for the GetUsers method.\nexport const GetUsersServiceRoutePath = \"/rpkit/users.UserService/GetUsers\";\n\n// GetUsersContractSource contains the source version of expected method contract.\nexport const GetUsersContractSource = `type GetUsersMethodContract interface {\n\tGetUsers(var1 context.Context)  users.User  \n}\n`;\n\n\n// GetUsersMethodUserFactory defines a function to\n// return a default object containing default field values of return value of\n// GetUsers method.\nexport function GetUsersMethodUserFactory(){\n    return JSON.parse(\"{\\n\\n\\n    \\\"id\\\":\\t0,\\n\\n    \\\"name\\\":\\t\\\"\\\",\\n\\n    \\\"addr\\\":\\t\\\"\\\",\\n\\n    \\\"cid\\\":\\t0.0\\n\\n}\");\n}\n\n\n// GetUsersClient returns a RPC method to be called to handle requests\n// for the GetUsers method of \"github.com/gokit/rpkit/examples/users\".\nexport function GetUsersClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {};\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function GetUsersRPC() {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = newRequest(options.ServiceAddr, GetUsersServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\")\n            req.setHeader(\"X-Service\", BaseServiceName)\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\")\n            req.setHeader(\"X-Method-Client\", \"GetUsers\")\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName)\n            req.setHeader(\"X-API-Client-Route\", GetUsersServiceRoute)\n            req.setHeader(\"X-API-Client-Route-Path\", GetUsersServiceRoutePath)\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\")\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            Promise.resolve(true).then(() => {\n                return options.Transport.Do(req);\n            }).then((resObj) => {\n                return options.Decoder.Decode(req, resObj.res, resObj.body);\n            }).then((resModel) => {\n                resolve(resModel);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n};\n\n\n\n\n\n// /////////////////////////////////////////////////////////////////\n// RP: Input And Output Returning Error methods\n// Method: Create\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.Create\n// /////////////////////////////////////////////////////////////////\n\n// CreateServiceRoute defines the route for the Create method.\nexport const CreateServiceRoute = \"users.UserService/Create\";\n\n// CreateServiceRoutePath defines the full method path for the Create method.\nexport const CreateServiceRoutePath = \"/users/UserService/Create\";\n\n// CreateContractSource contains the source version of expected method contract.\nexport const CreateContractSource = `type CreateMethodContract interface {\n\tCreate(var1 context.Context,var2 users.NewUser)  (users.User,error)  \n}\n`;\n\n\n// CreateMethodUserFactory defines a function to\n// return a default object containing default field values of return value of\n// Create method.\nexport function CreateMethodUserFactory(){\n    return JSON.parse(\"{\\n\\n\\n    \\\"id\\\":\\t0,\\n\\n    \\\"name\\\":\\t\\\"\\\",\\n\\n    \\\"addr\\\":\\t\\\"\\\",\\n\\n    \\\"cid\\\":\\t0.0\\n\\n}\");\n}\n\n\n\n// CreateMethodNewUserFactory defines a function to\n// return a default object containing default field values of argument of\n// Create method.\nexport function CreateMethodNewUserFactory(){\n    return JSON.parse(\"{\\n\\n\\n    \\\"name\\\":\\t\\\"\\\"\\n\\n}\");\n}\n\n\n// CreateClient returns a RPC method to be called to handle requests\n// for the Create method of \"github.com/gokit/rpkit/examples/users\".\nexport function CreateClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {};\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function CreateRPC(model) {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = newRequest(options.ServiceAddr, CreateServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\")\n            req.setHeader(\"X-Service\", BaseServiceName)\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\")\n            req.setHeader(\"X-Method-Client\", \"Create\")\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName)\n            req.setHeader(\"X-API-Client-Route\", CreateServiceRoute)\n            req.setHeader(\"X-API-Client-Route-Path\", CreateServiceRoutePath)\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\")\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            const encoded = options.Encoder.Encode(req, model);\n            if (!(encoded instanceof Promise)) {\n                reject(new Error(\"Encoder.Encode does not return a Promise\"));\n                return\n            }\n\n            encoded.then((req) => {\n                return options.Transport.Do(req);\n            }).then((resObj) => {\n                return options.Decoder.Decode(req, resObj.res, resObj.body);\n            }).then((resModel) => {\n                resolve(resModel);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n};\n\n// /////////////////////////////////////////////////////////////////\n// RP: Input And Output Returning Error methods\n// Method: GetBy\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.GetBy\n// /////////////////////////////////////////////////////////////////\n\n// GetByServiceRoute defines the route for the GetBy method.\nexport const GetByServiceRoute = \"users.UserService/GetBy\";\n\n// GetByServiceRoutePath defines the full method path for the GetBy method.\nexport const GetByServiceRoutePath = \"/users/UserService/GetBy\";\n\n// GetByContractSource contains the source version of expected method contract.\nexport const GetByContractSource = `type GetByMethodContract interface {\n\tGetBy(var1 context.Context,var2 string)  (int,error)  \n}\n`;\n\n\n\n\n\n// GetByClient returns a RPC method to be called to handle requests\n// for the GetBy method of \"github.com/gokit/rpkit/examples/users\".\nexport function GetByClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {};\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function GetByRPC(model) {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = newRequest(options.ServiceAddr, GetByServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\")\n            req.setHeader(\"X-Service\", BaseServiceName)\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\")\n            req.setHeader(\"X-Method-Client\", \"GetBy\")\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName)\n            req.setHeader(\"X-API-Client-Route\", GetByServiceRoute)\n            req.setHeader(\"X-API-Client-Route-Path\", GetByServiceRoutePath)\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\")\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            const encoded = options.Encoder.Encode(req, model);\n            if (!(encoded instanceof Promise)) {\n                reject(new Error(\"Encoder.Encode does not return a Promise\"));\n                return\n            }\n\n            encoded.then((req) => {\n                return options.Transport.Do(req);\n            }).then((resObj) => {\n                return options.Decoder.Decode(req, resObj.res, resObj.body);\n            }).then((resModel) => {\n                resolve(resModel);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n};\n\n// /////////////////////////////////////////////////////////////////\n// RP: Input And Output Returning Error methods\n// Method: CreateUser\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.CreateUser\n// /////////////////////////////////////////////////////////////////\n\n// CreateUserServiceRoute defines the route for the CreateUser method.\nexport const CreateUserServiceRoute = \"users.UserService/CreateUser\";\n\n// CreateUserServiceRoutePath defines the full method path for the CreateUser method.\nexport const CreateUserServiceRoutePath = \"/users/UserService/CreateUser\";\n\n// CreateUserContractSource contains the source version of expected method contract.\nexport const CreateUserContractSource = `type CreateUserMethodContract interface {\n\tCreateUser(var1 users.NewUser)  (users.User,error)  \n}\n`;\n\n\n// CreateUserMethodUserFactory defines a function to\n// return a default object containing default field values of return value of\n// CreateUser method.\nexport function CreateUserMethodUserFactory(){\n    return JSON.parse(\"{\\n\\n\\n    \\\"name\\\":\\t\\\"\\\",\\n\\n    \\\"addr\\\":\\t\\\"\\\",\\n\\n    \\\"cid\\\":\\t0.0,\\n\\n    \\\"id\\\":\\t0\\n\\n}\");\n}\n\n\n// CreateUserMethodNewUserFactory defines a function to\n// return a default object containing default field values of argument of\n// CreateUser method.\nexport function CreateUserMethodNewUserFactory(){\n    return JSON.parse(\"{\\n\\n\\n    \\\"name\\\":\\t\\\"\\\"\\n\\n}\");\n}\n\n\n\n// CreateUserClient returns a RPC method to be called to handle requests\n// for the CreateUser method of \"github.com/gokit/rpkit/examples/users\".\nexport function CreateUserClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {};\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function CreateUserRPC(model) {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = newRequest(options.ServiceAddr, CreateUserServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\")\n            req.setHeader(\"X-Service\", BaseServiceName)\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\")\n            req.setHeader(\"X-Method-Client\", \"CreateUser\")\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName)\n            req.setHeader(\"X-API-Client-Route\", CreateUserServiceRoute)\n            req.setHeader(\"X-API-Client-Route-Path\", CreateUserServiceRoutePath)\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\")\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            const encoded = options.Encoder.Encode(req, model);\n            if (!(encoded instanceof Promise)) {\n                reject(new Error(\"Encoder.Encode does not return a Promise\"));\n                return\n            }\n\n            encoded.then((req) => {\n                return options.Transport.Do(req);\n            }).then((resObj) => {\n                return options.Decoder.Decode(req, resObj.res, resObj.body);\n            }).then((resModel) => {\n                resolve(resModel);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n};\n\n// /////////////////////////////////////////////////////////////////\n// RP: Input And Output Returning Error methods\n// Method: GetUser\n// Source: github.com/gokit/rpkit/examples/users\n// Handler: users.UserService.GetUser\n// /////////////////////////////////////////////////////////////////\n\n// GetUserServiceRoute defines the route for the GetUser method.\nexport const GetUserServiceRoute = \"users.UserService/GetUser\";\n\n// GetUserServiceRoutePath defines the full method path for the GetUser method.\nexport const GetUserServiceRoutePath = \"/users/UserService/GetUser\";\n\n// GetUserContractSource contains the source version of expected method contract.\nexport const GetUserContractSource = `type GetUserMethodContract interface {\n\tGetUser(var1 int)  (users.User,error)  \n}\n`;\n\n\n// GetUserMethodUserFactory defines a function to\n// return a default object containing default field values of return value of\n// GetUser method.\nexport function GetUserMethodUserFactory(){\n    return JSON.parse(\"{\\n\\n\\n    \\\"id\\\":\\t0,\\n\\n    \\\"name\\\":\\t\\\"\\\",\\n\\n    \\\"addr\\\":\\t\\\"\\\",\\n\\n    \\\"cid\\\":\\t0.0\\n\\n}\");\n}\n\n\n\n\n// GetUserClient returns a RPC method to be called to handle requests\n// for the GetUser method of \"github.com/gokit/rpkit/examples/users\".\nexport function GetUserClient(options) {\n    if (options.BeforeRequest && typeof options.BeforeRequest !== \"function\") {\n        throw new Error(\"options.BeforeRequest must be a function\");\n    }\n\n    if (options.Headers && typeof options.Headers !== \"object\") {\n        throw new Error(\"options.Headers must be a object map\");\n    }\n\n    // encoders must be functions that returns promises from their Encode methods.\n    if (options.Encoder && typeof options.Encoder.Encode !== \"function\") {\n        throw new Error(\"Encoder must provide Encoder method\");\n    }\n\n    // decoders must be functions that returns promises from their Encode methods.\n    if (options.Decoder && typeof options.Decoder.Decode !== \"function\") {\n        throw new Error(\"Decoder must provide Decode method\");\n    }\n\n    // Transport must be function that returns promises from their calls.\n    if (options.Transport && typeof options.Transport.Do !== \"function\") {\n        throw new Error(\"Transport must provide Do method\");\n    }\n\n    if (!options.ServiceAddr) {\n        throw new Error(\"options must provide a ServiceAddr pointing to service http server\");\n    }\n\n    if (!options.Headers) options.Headers = {};\n    if (!options.Encoder) options.Encoder = JSONEncoding;\n    if (!options.Decoder) options.Decoder = JSONEncoding;\n    if (!options.Transport) options.Transport = HTTPTransport;\n\n    return function GetUserRPC(model) {\n        return new Promise(function GetUserPromise(resolve, reject) {\n            const req = newRequest(options.ServiceAddr, GetUserServiceRoutePath, options.Headers);\n            req.setHeader(\"X-Client\", \"JS-RPKIT\")\n            req.setHeader(\"X-Service\", BaseServiceName)\n            req.setHeader(\"X-Package\", \"github.com/gokit/rpkit/examples/users\")\n            req.setHeader(\"X-Method-Client\", \"GetUser\")\n            req.setHeader(\"X-Method-ClientService\", MethodServiceName)\n            req.setHeader(\"X-API-Client-Route\", GetUserServiceRoute)\n            req.setHeader(\"X-API-Client-Route-Path\", GetUserServiceRoutePath)\n            req.setHeader(\"X-Client-Package-Interface\", \"users.UserService\")\n\n            if (options.BeforeRequest) options.BeforeRequest(req);\n\n            const encoded = options.Encoder.Encode(req, model);\n            if (!(encoded instanceof Promise)) {\n                reject(new Error(\"Encoder.Encode does not return a Promise\"));\n                return\n            }\n\n            encoded.then((req) => {\n                return options.Transport.Do(req);\n            }).then((resObj) => {\n                return options.Decoder.Decode(req, resObj.res, resObj.body);\n            }).then((resModel) => {\n                resolve(resModel);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    };\n};\n\n\n","module.exports = __WEBPACK_EXTERNAL_MODULE_axios__;","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;","module.exports = __WEBPACK_EXTERNAL_MODULE_safe_buffer__;"],"sourceRoot":""}