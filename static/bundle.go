package static


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
)

type fileData struct{
  path string
  root string
  data []byte
}

var (
  assets = map[string][]string{
    
      ".tml": []string{  // all .tml assets.
        
          "interface_rpc.tml",
        
      },
    
  }

  assetFiles = map[string]fileData{
    
      
        "interface_rpc.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9d\x6f\x6f\xdb\x38\xd2\xc0\x5f\x5b\x9f\x62\x56\xe8\xed\xd9\x5b\x55\x6e\xb7\x6f\x0e\xbe\xc7\x0f\xe0\xed\x15\x4f\x83\xdb\xa6\x41\x9a\xe2\x1e\x60\xb1\x68\x19\x89\xb6\xd9\x28\xa4\x4b\x52\x71\x03\xaf\xbf\xfb\x61\x48\x4a\x96\xff\x27\x5d\x37\x4d\x37\xb3\x6f\x1a\x51\x24\x67\x38\x1c\x0e\x87\xfc\xad\x92\x6e\x17\x06\x45\x01\x99\xca\x39\x9c\xf3\x42\x4d\x81\x69\x0e\xac\xb4\xea\xc9\x88\x4b\xae\x99\xe5\x39\x30\x99\x83\x19\xab\xb2\xc8\x41\x2a\x0b\xe7\x1c\x78\x2e\xf0\xc5\xf9\x35\x8c\x99\xcc\x0b\x9e\x46\xdd\x2e\xbc\xe5\x1c\xc6\xd6\x4e\x4c\xaf\xdb\x1d\x09\x3b\x2e\xcf\xd3\x4c\x5d\x76\x47\xea\x42\xd8\xae\x9e\x5c\x08\x0b\x43\xa5\xe1\x52\x69\x0e\x42\x0e\x55\x1a\xcd\x66\xf0\xe8\xc8\x6a\xe8\xf5\x21\x3d\xb2\x7a\x3e\x87\xd9\xec\xd1\xc9\xc5\xc8\x15\x9c\x5c\x8c\x7c\xc1\x5b\xae\xaf\x44\xc6\x8f\xd9\x25\x77\x2f\x1a\xcf\xf3\x79\x24\x2e\x27\x4a\x5b\x68\x47\xad\x38\x53\xd2\xf2\xcf\x36\x8e\x5a\x31\x97\x99\xca\x85\x1c\x75\x3f\x1a\x25\xb1\x60\x78\xe9\xca\x25\xb7\x5d\xd4\x11\x7f\x16\xca\xd5\xd4\x5a\x69\x83\x3f\x15\x6a\x14\x47\x51\x6b\x36\xfb\x54\x2a\xcb\x9d\x02\xe9\x09\xb3\xe3\xf9\x3c\xea\x44\x51\xa6\xa4\x71\x62\xba\x5d\xf8\x85\x19\xde\xd4\x2a\xe7\x43\x21\xb9\x01\x3b\xe6\x70\xce\x0c\x07\x89\xa5\x6a\x08\xc6\x57\x02\xad\x94\x4d\xa3\xd6\x6a\xbb\x3e\xd4\xc2\x96\x07\xe5\xa4\xbc\xe6\x76\xac\xf2\x6d\x72\x32\x75\x39\x29\xb8\x5d\xc8\xb2\x63\x61\x60\x24\xae\x84\x1c\xc1\xe0\xe4\xa8\x92\x9d\x46\xad\xf5\x8e\xfa\x10\xcf\x66\xcb\x32\xd3\xd9\x0c\xe7\x20\x7d\x73\xfe\x91\x67\x36\xc5\xc2\xd4\xbf\x89\x71\xf8\xdd\x2e\x78\x4b\x41\x9a\xa6\xd1\x15\xd3\x68\x8a\x97\x5a\x1f\xc9\x2b\x56\x88\xfc\x94\x7f\x2a\xb9\xb1\xef\x4e\x8f\xa0\x1f\x2a\xa6\xc7\x7c\xda\x8e\x85\x7f\x0f\xda\x57\x80\x52\x8b\xb8\xb3\xa1\xa5\xd7\x71\x4f\xe3\x4b\x57\x29\xee\x78\x85\x7e\x3a\xe0\x7f\x38\xbe\xb3\xeb\x09\x37\xce\x91\x55\xa9\x33\xde\x43\xdf\x43\x8b\x04\x1f\x38\xb0\x40\x14\xf4\x4a\xa9\x8b\x7a\x52\x19\x08\x69\xb9\x1e\xb2\x8c\xbb\x75\x32\x66\x6e\x2a\x59\x96\x71\x63\xc0\x2a\xc8\xc5\x70\xc8\x35\x97\x16\xd7\x28\x33\xa0\x86\xd8\x07\x83\x8c\x15\x05\xbe\x47\xaf\xa8\x1c\x4e\x0d\x81\x05\x73\xa5\x91\xbd\x9e\x70\x2f\x6b\x21\x61\x16\xb5\x4e\xb9\x99\x28\x89\x1e\x29\x6d\x3b\xac\x9d\xf4\x85\xff\xb7\xb3\x78\x7d\xa2\xf9\x84\x69\x9e\x6f\xac\xe2\xe6\xe5\x94\xa3\xcb\xec\xaa\x31\xc8\x32\x3e\xd9\x59\xe3\x94\x67\x5c\x5c\xed\xaa\x71\xa2\x15\x5a\x62\x53\x95\x79\x34\x9b\x69\x26\x47\x1c\x1e\xbd\x4f\xe0\x91\x1f\xb7\x8b\x15\xc7\x6a\xa0\x47\x03\x99\x9f\x72\x5b\x6a\x69\x0e\x3f\x8d\xdd\x2e\x9c\x9e\xf4\xe0\x58\xc1\x40\x8f\xca\x4b\x2e\xad\x71\xf1\xf2\x58\x81\x97\x19\x96\xb1\x73\x2c\xff\xa3\x73\xac\x30\x37\x61\xbd\xef\x70\x3a\x78\xe5\x22\xac\x6e\xbc\xc9\x2e\xd8\xc8\xaf\xd8\x47\x9b\x57\x6c\xba\x41\xc0\x41\x47\x8d\x7a\xad\xca\x08\xd1\xe4\x54\x95\x76\x39\x52\x69\x57\x82\x2e\x8d\x4f\xab\xcd\x6a\x2f\xf5\x01\x76\x67\xaf\x2e\x6c\x3d\x5a\x0d\x5b\x5b\x8c\xd0\x5d\xed\x2a\xde\xab\x36\x1a\x7d\x49\xf5\x61\x59\x14\x41\x41\x98\xe0\xcb\x03\x8c\xc2\x09\xe9\x43\xdc\x3d\xf8\x50\x70\x3d\x68\x96\x59\xef\x4a\x80\xcb\x84\x09\xe9\x47\x62\x7c\xd9\x15\xd7\x46\x28\x89\xf1\x81\x7f\x9e\xb8\x55\x5b\x8d\x2f\x0b\xad\xb7\x8d\x61\xa5\xf7\x3e\x7c\x70\x71\x65\xb5\x9a\xf7\xf1\xaa\xf2\x72\xc4\x59\xad\xdb\x5e\x14\x54\xab\xe7\x57\x61\x2c\x58\x5d\xf2\xf9\xbc\x03\xb3\x19\x88\x61\xb5\x9e\xd3\x57\xcc\x84\x65\x0c\xf3\xf9\x6c\x26\x86\xc0\x3f\xd5\x2f\xcf\x94\x65\x45\xf5\xfa\x99\x4f\x1c\xc2\x2b\x5f\xda\xe8\x18\x66\x33\x5e\x18\xfc\xa1\xbd\xa3\x16\x8a\xe7\x32\xf7\xd5\xf1\xdf\x68\x1e\x7d\xd8\x68\xf7\x95\x21\x2f\x02\x7a\xb6\x6e\x05\x97\x01\x79\x83\xcf\x66\xe0\x37\xff\xf5\x60\x30\xd1\xea\x4a\xe4\x3e\xc3\x8a\x6f\xbe\xee\x63\x10\xb2\x4e\x29\xea\x30\x02\xf3\x79\x0a\x47\x16\x58\x51\xa8\xa9\x81\xd2\x85\x22\x6e\x2c\x3b\x2f\x84\x19\x03\x03\x23\x30\x95\x58\x68\x6b\x4a\x81\x2f\x2b\x65\xb9\xc5\x7d\x08\x9d\x48\x72\x9e\x1b\x97\xd7\x30\x91\x2f\x6f\x2f\x37\x75\x83\xbf\x82\x17\x6c\xf7\x81\xb0\x9e\x97\xc3\x9f\xeb\x92\xe7\x60\xc4\x48\x32\x5b\x6a\x8e\xb3\x8a\x6f\x42\xed\x4d\xbb\xc1\x74\x2c\xb2\x31\xf0\xcf\x3c\x2b\x2d\x37\x20\xec\xdf\x8d\xb7\xa1\x64\x05\x9c\x73\xcc\x0d\x54\xa9\x5d\xb2\x99\x83\x1a\x0e\x41\x49\x5f\x69\xf7\x3c\xec\x9c\xac\x4a\xf9\x61\x29\xb3\xb5\x3d\xd6\xe7\x65\x91\xcf\xf3\xf5\x15\x9f\xcd\x96\xda\x82\x73\x21\xbf\xfd\xf9\xec\x54\x37\x1c\x6a\xa1\xb0\x55\x75\x8a\x52\xfb\xe9\xda\xe0\x87\x5a\x5d\x1e\xcc\xed\xff\x6e\xe0\xa3\x3a\x07\xe1\x52\xa8\xb0\xae\x80\xc1\xa4\x28\x47\x23\xef\xe4\xa5\xcc\xac\x50\x32\x41\xd1\x76\xcc\x2c\x64\x4c\xe2\x20\x24\x9e\x74\x4a\x34\xf0\x54\xd8\xb1\x90\xc0\xe4\x35\x58\xcd\xa4\x71\x27\x8e\x82\x5d\x73\x9d\xb8\x11\xe1\x6a\x08\x73\xd5\x18\xab\x1a\x56\x2b\x9d\x61\x30\xa8\xf3\x71\x14\xb8\xd1\x88\xed\xa0\x9e\xde\x33\x8b\x9d\x3d\x13\x38\x8b\x5a\xde\xe9\xc2\x54\xda\xcf\xb0\x79\x3a\xb1\x66\xcb\xad\xa1\xc6\xea\x1a\xe8\x11\x66\xc2\x10\xaf\xb4\x89\xe7\xf3\xa8\xd5\xaa\x54\x5c\x4b\x31\x50\x4c\xc7\x75\xe7\x57\xd5\xce\xba\xa1\xa2\x5b\x4f\xad\x4a\x59\x29\x8a\xa8\xb5\x6d\x7d\x39\x7b\xe9\xa6\x9b\x31\x77\xd8\x4c\x43\x7a\xe4\x62\x95\x37\x71\x15\xad\xea\x30\xbb\xc5\xc3\x6e\x91\x4f\x6d\x5e\x36\x95\x4e\xcd\x2d\xae\xa9\x13\x0e\xc5\x35\x44\xad\x57\x1b\x57\x7a\x1b\xab\xcb\xcc\x62\x4b\x4c\xd0\x31\x4b\x8f\x5a\x63\xce\x72\xae\x4d\x18\xa0\x7b\x88\x5a\x8b\x75\xb3\x63\xee\x83\xf5\x8e\xf9\x74\x8b\xb2\x3a\x04\x47\x06\x92\x4f\x41\x48\x63\x99\xcc\xc2\xf9\x91\xc3\xab\xb3\xb3\x93\x4a\x31\x1f\x82\x82\x54\x83\xbb\x07\xf6\x8c\x2a\x55\xe7\x31\xe3\x8c\x1e\x8e\x9c\x0b\x6b\x7f\x69\x92\x1a\x56\xc6\x56\xdd\xdb\x37\xb2\x40\x02\xb5\x21\x13\xd8\x60\xc8\xf5\xc5\x13\x2c\xb3\x58\x35\x3b\xa6\x0b\x17\x0c\xf6\xdf\x73\x52\x12\x7c\xf2\x22\x7a\x95\x2c\x2c\x0b\x8a\xf6\x2a\xeb\x25\x0b\xbf\x76\xc2\xd0\xcc\xab\x11\xb3\xe9\x38\xe9\xa2\x56\x15\x41\x64\xbe\x98\x8a\x9d\xe6\xdf\x14\x54\x83\x65\xdb\x28\x72\xd7\xe8\x3a\x0b\xf5\xda\x53\xaf\x51\x75\x0a\xfc\x8f\x16\x16\xc3\x9d\x86\x9f\x42\xb9\xd3\xa1\x83\x66\xc3\x00\xd3\xeb\x83\xae\x22\x45\xbb\x13\x45\x2d\x31\x74\x92\x52\x37\x1b\x3f\xf4\x71\x75\xbb\x70\x53\x17\xa6\x6b\x27\x3f\x17\x40\xe6\xbe\xad\x4e\xc3\xc6\xf2\x43\x1f\xe2\x93\x37\x6f\xcf\x62\xf8\xf1\xc7\xe5\xd2\x57\x2f\x07\xff\x8a\x7d\x9f\x5b\x64\x6d\x12\x56\x1d\x55\x7d\xb4\x42\x69\xad\x8f\x46\x49\x37\xbe\x97\x18\x14\xdb\xd3\xc4\x0f\xfd\xad\x65\xb6\x34\xbf\xb0\xea\x8a\x22\x81\x58\xc9\xe2\x1a\x50\x1b\x50\x1a\x50\x7e\x7d\x35\xe1\x92\x2b\x9e\xc7\x09\x6c\xb9\xda\x48\xe0\x92\x4d\x7e\x33\x56\x0b\x39\xfa\x7d\x91\x0e\xcd\x9d\x9e\xf1\xc4\xaf\x97\xb8\xb7\xbe\x8f\xcd\xe7\x89\xab\xc2\x26\xe2\x3d\xee\xf7\x71\x6f\xf5\xfe\xc9\xbf\x0f\x97\x23\xbd\x2d\x3e\xb0\xe8\x24\xf8\x51\xdc\x5b\xbf\x61\xf2\x95\xdc\x81\x2d\x5e\x3f\xa6\x36\x4f\x31\x75\x77\x71\xef\x56\x5b\x35\xb6\x9b\x77\xea\xa0\xbf\x3e\xdf\xfd\xa5\x99\x45\x0f\xbf\xe0\xd7\x09\x5c\xb1\xc2\x38\x27\x73\xc7\x7c\x3f\xaf\x61\x71\x3b\x0b\x62\xc5\xf7\x09\x08\xcb\x2f\x17\xd5\x5c\x23\xf7\xba\x35\x0d\xcb\xbf\xdd\x49\x07\x79\xde\x76\x7d\x62\x65\x54\xa5\x35\xaf\x3c\x61\xa5\x56\xfc\xff\x4f\x06\x23\x2e\x6d\x9c\x40\x7c\x7a\xf2\xef\xa3\xb3\xb8\xb3\xb1\x52\x30\x4c\x9c\xac\xce\xcc\xe6\xea\xc1\x4e\x71\xb2\x69\xb2\x37\x37\xf1\xc6\x69\xb6\x58\x9a\x99\x5d\x8d\x1a\xda\xad\xcd\xf7\xe6\x76\x83\x93\xa3\x27\x6e\x92\x9d\xbc\xed\x3e\xb0\x73\x74\x4f\x8e\x2a\x1f\x47\xeb\xdd\xc2\x43\x3a\x7e\x22\xdc\x82\x0c\x7d\x37\x96\xe3\xb1\x72\x41\x46\xda\x8d\x3e\xf4\xee\xf4\x57\x9f\xfb\xfd\xd0\xdf\x7f\x06\xff\x46\x91\xa3\x8a\x18\x56\x41\xfc\x78\x9f\x92\x8f\xe3\x5d\x91\xe5\xdd\xe9\x11\x85\x95\x9d\x61\xe5\x66\x5b\xd0\xe2\x7a\xb2\xde\x82\x6e\x1a\x78\xf6\xc4\x9d\x5d\x61\x67\xee\x25\xdd\x24\xe6\xdc\x2e\xe4\xdc\x3e\xe2\x7c\x49\xc0\xf9\xc2\x78\xf3\xa7\xc2\xcd\xd7\x89\x36\x37\xf1\x93\xd5\xbb\xf0\xda\x51\xae\x98\x06\xe6\x0e\x90\x2f\xb5\x0e\xa7\xe4\x96\x3b\x77\x75\xb0\x8f\x9c\x0f\xf1\x70\x52\x3f\xbb\x38\xc5\xb5\x63\x5e\x9a\x67\x0a\xf3\xda\xce\x3f\x7d\x51\x33\xfe\xb4\xf2\x50\x69\x78\x69\x53\x17\x5d\x86\xed\x78\xc2\xa4\xc8\x50\x46\x0f\xfe\xf6\xf8\x53\x9c\xb8\x66\x6e\x07\xbb\x45\x24\xf2\x9d\xa8\x2c\x2b\x75\x38\xda\x56\xc9\xa3\x2e\x65\x9c\x00\x0a\xde\x19\x55\x6e\x14\x57\xf6\x47\x96\x1b\xc6\x96\x1b\x46\x97\xdb\xc4\x97\x2f\x8e\x30\x21\xc6\xb4\x5a\xce\x86\xed\xda\xfa\x2e\x7f\x70\x59\xef\x2d\x36\x94\x06\xcf\x68\xec\x28\x0b\x57\xea\xfb\x8e\xc2\xc0\x2b\x8f\xab\x72\xeb\x45\xbd\x86\x90\x9b\x3b\x41\x48\xb6\xea\xbb\x29\xae\x75\x9c\x2c\x3a\xa5\x5d\x65\xfb\xae\xb2\x35\x35\x79\xf3\xef\xdb\x05\x13\xcf\xdd\x42\x20\x99\x47\xd5\x7d\xc8\x36\x94\xf5\x46\x16\xd7\x6e\x5e\x03\x50\xfa\x6a\x2c\xcb\x09\x09\xf4\x6a\x71\xb4\x24\x80\x45\x00\x8b\x00\xd6\xf7\x8e\x2e\x08\x60\x11\xc0\x22\x80\x45\x00\xeb\xe1\x02\xac\xd0\xf1\x6d\x38\xd6\xde\x26\x4b\x38\x8b\x08\x16\x11\x2c\x22\x58\x44\xb0\x88\x60\x3d\xa0\x4b\x01\x22\x58\x44\xb0\x88\x60\x11\xc1\x22\x82\x45\x04\x8b\x08\x16\x11\x2c\x22\x58\x44\xb0\xee\xeb\xae\xf2\x0d\x11\x56\x69\x27\xa5\xfd\x8f\xb0\xe3\x3b\x01\x59\x5e\x9c\x0f\x10\x0b\x9c\xe5\xf1\x16\x41\x2d\x82\x5a\x04\xb5\x08\x6a\x11\xd4\xfa\x2b\x43\xad\x97\x32\x53\x39\xd7\x1b\xbf\xb1\xae\x08\xd5\x44\x19\xee\xcc\x2d\x47\x45\x7d\xe5\x6e\x15\xb8\x5f\x21\xc0\x03\x01\xf3\xdb\x1d\x8a\xa8\x13\x8e\xf3\xeb\x7d\xac\x6a\xfd\x7a\x78\xe3\xa4\x54\x4a\x36\x67\xc3\x97\xb5\x85\x4a\xab\x6b\xcb\xd9\x0c\x1e\xb1\x40\x36\x7a\xfd\xda\xb6\xff\xc7\x6d\xb0\xec\xc0\xc2\x53\xb4\x7d\x5d\x2d\x7d\xf9\xd9\xd5\x46\x73\xf9\xac\xfe\x41\x92\xbf\x04\x6a\x2b\x7e\xa7\x10\x10\x7b\x3b\xb2\x0d\xf0\x51\x11\xbf\x05\xed\xdb\x0f\xfa\x02\x3d\xc4\x84\x7d\x8d\xf9\xa1\x80\x3b\xc0\x7e\x49\x58\x53\xeb\xf5\xc2\x12\xf8\xf3\x5c\x30\x81\xe9\xda\x74\x7f\x11\x24\x34\x09\x84\xe3\xeb\xed\x48\xe1\x4d\xda\x2d\x7f\xfd\x86\xb1\x72\xe5\xe8\x1c\x06\xc9\xb5\xf6\x97\x2c\x75\x81\x37\x53\x1a\xa2\xc3\x14\x8f\xcf\xa6\x43\xc8\x91\x90\x23\x21\x47\x42\x8e\x84\x1c\x1f\xd2\x2d\x0e\x21\x47\x42\x8e\x84\x1c\x09\x39\xde\x27\xe4\xf8\xa7\x30\x14\xf1\xca\x87\xc3\x2b\x09\x39\x12\x72\xbc\x23\xe4\x98\xc0\xf4\x80\xd4\xb1\xba\x95\x67\x45\x41\xe8\xf1\xd0\x1f\xcf\xdd\x05\x78\x3c\x56\x77\x89\x1e\x17\xd4\xf1\x0d\xa6\x32\x84\x1e\x09\x3d\x12\x7a\x24\xf4\x48\xe8\x91\xd0\x23\xa1\x47\x42\x8f\x84\x1e\x09\x3d\x12\x7a\x24\xf4\x48\xe8\x91\xd0\x23\xa1\x47\x42\x8f\xdf\xcb\x2d\x0e\xa1\x47\x42\x8f\x84\x1e\x09\x3d\x12\x7a\x24\xf4\xf8\xbd\xa1\xc7\x3d\xdf\x3e\x11\x99\x24\x32\x49\x64\x92\x36\x9f\xc3\xb1\xc7\x23\x79\x97\xdf\x3c\x3a\x69\xc4\x1d\x89\x3b\x12\x77\x24\xee\x48\xdc\xf1\xe1\x71\xc7\x7f\xf1\x2f\xe7\x8e\x39\x6f\x70\x47\x7f\xea\xcd\x99\x65\x6e\x9a\xaa\x45\x7a\x30\xf6\x58\x29\xda\x9c\x11\x5f\xd6\x16\x2a\x3d\x0d\x97\xbf\xed\xca\xb2\xed\xc6\xd4\x9c\x5d\x4f\xf8\x89\x32\xeb\x04\xa5\xe3\x39\xe4\x16\x5a\x39\xd0\x23\x33\xb0\x38\x1d\x1b\x51\x65\x35\x0d\xfb\xda\x6f\x43\x9d\x61\x5e\x12\x7f\x6a\xe8\x3c\x60\xe4\x59\x4d\x1e\x21\xcf\x6f\x8a\x3c\x73\xbe\x19\x79\x86\x95\x77\x08\xe4\xa9\xd7\xa6\xdb\x27\xcd\x98\x85\xd6\x38\x32\xe8\x91\x86\xd5\xed\x0e\x59\xfb\xd1\xe3\x57\xf9\xcd\xae\x09\x38\xd5\x6e\xfb\x0b\x5e\x9b\x8d\xe8\xb7\xbc\x12\xf7\x24\xee\xf9\x3d\x72\x4f\x7f\x79\xa7\xd3\x5f\x54\x7e\x9d\xbe\x28\x94\xe1\xee\xee\x85\x70\x28\xe1\x50\xc2\xa1\x84\x43\x09\x87\x12\x0e\xbd\x67\x61\x85\x70\x28\xe1\x50\xc2\xa1\x84\x43\x1f\x06\x0e\xf5\x99\x39\x31\xd1\xef\x6a\x07\xfa\x72\x26\x3a\x90\xb9\xff\x4c\xf2\x6e\x98\xe8\x40\xe6\xd5\x67\x99\x0e\x8a\x12\x0e\x25\x1c\x4a\x38\x94\x70\x28\xe1\x50\xc2\xa1\x84\x43\xbf\x15\x0e\xa5\xcf\x64\xe9\x33\xd9\xc6\x67\xb2\x84\x8f\xef\x0f\x3e\xde\xf3\xc5\xec\x9d\xf0\xe5\x69\xd3\x35\xee\x17\x6c\x36\x7b\xbf\xd0\xdd\x06\x9b\xf7\xb4\x5c\x83\xcd\xf4\x15\x2e\xd1\x68\xa2\xd1\x44\xa3\x89\x46\x13\x8d\x26\x1a\x4d\x34\x9a\x68\x34\xd1\xe8\x7b\xc9\x02\x88\x46\x13\x8d\x26\x1a\x4d\x34\xfa\x2f\x41\xa3\xa7\x04\xa4\xbf\xcb\x4d\xe8\x00\x40\xfa\x8e\xbf\xd6\x6d\x90\x69\xfa\x33\xa5\x04\xa9\x09\x52\x13\xa4\x26\x48\x4d\x90\x9a\x20\x35\x41\x6a\x82\xd4\x04\xa9\x09\x52\x6f\x9d\x4d\x82\xd4\x87\xf9\x5d\xd2\x5b\x49\xf5\x0d\x9a\xaf\x7f\x1b\x7d\xb3\xa1\x10\xd2\x26\xa4\x4d\x48\x9b\x90\x36\x21\x6d\xa7\x32\x5d\xfb\x11\xd2\x26\xa4\x4d\x48\x9b\x90\xf6\xbd\xa2\x09\x84\xb4\x09\x69\x13\xd2\x26\xa4\x4d\x48\x9b\x90\xf6\xfd\x44\xda\x5f\x01\x4d\xbf\xb3\xa2\x30\xbb\xb8\xf2\x41\x05\xba\xdb\x5e\x51\x14\xa7\x3c\x17\x9a\x67\x8b\x6b\x49\xab\x4b\xde\x1d\xb2\xc2\x70\x10\xc3\xea\x7c\xeb\x6e\xd3\x85\x01\x06\xba\xaa\x6f\x9c\x57\x86\xb3\x6d\xb3\xa7\xb6\xaf\x2c\x6d\x07\xce\x95\x2a\x1a\x27\x7b\xf7\xe2\x7f\xfb\xf0\xfc\xe9\x33\x3c\x37\xba\xc7\xff\xc1\xc7\x7f\x84\xe3\xb9\x30\x87\x51\x67\xd1\xcf\x1e\x65\xfa\xfd\xe6\x12\x3b\xe3\x97\x13\xa5\x99\xbe\xae\xb5\xf8\xe3\x8f\x4d\xf5\x4e\xb8\xbe\x64\x92\x4b\x5b\xd5\x0b\xea\x9b\x0b\x31\xa9\x8a\x0c\x64\x6a\x22\xb8\xa9\x54\x76\xcd\x5f\x14\x82\x4b\xeb\xae\x13\x86\xe2\x33\x08\x63\x4a\xee\xa3\xf9\x44\x19\x23\xce\x0b\x5e\x0f\xc8\x79\x82\x90\x30\x52\xcf\xd2\x7f\xc0\x74\xcc\x25\x30\xac\x85\x96\x71\x47\x73\x77\xa7\xeb\xd4\xf1\x2a\xfa\x0b\x23\x61\xa0\x94\x39\x37\x42\xf3\x3c\x85\xb7\x65\x36\x86\x31\x33\xf0\xfc\xe9\xcf\x09\x3c\x7f\xfa\x3c\xc1\x5e\x51\xfc\xf3\xa7\xcf\x2a\x63\x2d\x69\xdd\x16\x32\x5c\x31\x78\x5d\x3b\x4b\x4f\xee\xef\x58\xa9\xc9\x35\xee\x71\x3f\x09\xe9\x1f\xd2\x17\x63\x9e\x5d\xd4\x26\xeb\xfb\x8d\x53\xf3\x4f\xcb\x77\x15\x09\x5c\x09\x06\xbf\xfd\xbe\x72\x81\xd1\xb8\xac\x1d\x82\x90\x2b\x9d\x35\x83\x71\xd8\x5b\x57\xeb\xa0\x24\xd7\xb7\x8b\xea\xef\xa1\xef\x6e\x41\xbb\x5d\x4c\xe5\x57\x8c\x3c\x65\xfe\xff\xf2\x60\xe7\xaa\xb4\x20\x95\x85\x0c\x7b\xc2\x22\xa7\x46\xba\xfc\xd7\xf7\x9c\xa2\x2f\xb5\x7e\x67\xf8\xaf\x0c\xcf\x1a\x01\x24\x61\x9d\x50\xe5\x47\x34\x00\xce\xbe\xb3\xe4\x6a\xfc\xde\x7c\x87\x53\x79\x64\x02\x97\xdc\x18\x36\xe2\xe0\x63\xb4\xbf\xf5\x75\x8a\xe0\x2b\xcb\xb6\xc4\x6f\x4c\x49\x30\x81\xd1\xdc\x38\x89\x4e\xd8\x42\x39\xcd\x4d\xfa\xc2\xf9\xac\x93\xe4\x0b\xfc\xde\xe4\xee\x81\xf1\xf1\x35\xf6\xde\x77\x42\xaa\x02\xaf\x49\xbf\xd2\x69\x2d\x87\xc2\xbe\x96\xd3\xb5\xb7\xdc\xb6\xe3\x70\xee\x7b\x72\x76\x3d\x71\x79\x1a\x9b\x4c\x0a\x91\x31\xdc\x82\xba\xa8\x9c\xcb\xc6\x72\x66\x99\x1b\xdd\xcf\x38\x81\x58\x9c\xbe\x66\xda\x8c\x59\xd1\xd6\xdc\x74\xfe\x19\x85\xbb\xeb\x9f\x71\x9d\x55\xf3\x1d\xc4\xb7\xb1\xf1\x6a\xf8\x2e\xd4\x28\x3d\xd1\x42\xda\x61\x3b\x2e\xa5\x03\xdf\x8e\xe5\xc8\x3c\xf8\x53\x05\xfd\xdc\x1d\x9d\x2f\xfa\xdb\xe3\x4f\x55\x06\xe6\x92\x25\x94\xd7\xa9\xef\x88\xd7\x0c\xb9\xb8\x19\x7e\x11\xe6\x0b\x3e\x60\xa5\x5e\x8c\x96\x88\x3f\x44\xad\x3a\x75\xac\x5e\xe0\xfe\xfb\x21\x6a\xbd\x5e\x9a\xd5\xea\x65\xb0\xab\xaf\xb0\x75\x6e\x17\xb5\x2d\x8b\x3f\x44\xf3\xe8\xbf\x01\x00\x00\xff\xff\xc9\x0f\x9d\xe9\x2b\xd4\x00\x00"),
          path: "interface_rpc.tml",
          root: "interface_rpc.tml",
        },
      
    
  }
)

//==============================================================================

// FilesFor returns all files that use the provided extension, returning a
// empty/nil slice if none is found.
func FilesFor(ext string) []string {
  return assets[ext]
}

// MustFindFile calls FindFile to retrieve file reader with path else panics.
func MustFindFile(path string, doGzip bool) (io.Reader, int64) {
  reader, size, err := FindFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return reader, size
}

// FindDecompressedGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindDecompressedGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, true)
}

// MustFindDecompressedGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindDecompressedGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindDecompressedGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, false)
}

// MustFindGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFile returns a io.Reader by seeking the giving file path if it exists.
func FindFile(path string, doGzip bool) (io.Reader, int64, error){
	reader, size, err := FindFileReader(path)
	if err != nil {
		return nil, size, err
	}

	if !doGzip {
		return reader, size, nil
	}

  gzr, err := gzip.NewReader(reader)
	return gzr, size, err
}

// MustFindFileReader returns bytes.Reader for path else panics.
func MustFindFileReader(path string) (*bytes.Reader, int64){
	reader, size, err := FindFileReader(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFileReader returns a io.Reader by seeking the giving file path if it exists.
func FindFileReader(path string) (*bytes.Reader, int64, error){
  item, ok := assetFiles[path]
  if !ok {
    return nil,0, fmt.Errorf("File %q not found in file system", path)
  }

  return bytes.NewReader(item.data), int64(len(item.data)), nil
}

// MustReadFile calls ReadFile to retrieve file content with path else panics.
func MustReadFile(path string, doGzip bool) string {
  body, err := ReadFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFile attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFile(path string, doGzip bool) (string, error){
  body, err := ReadFileByte(path, doGzip)
  return string(body), err
}

// MustReadFileByte calls ReadFile to retrieve file content with path else panics.
func MustReadFileByte(path string, doGzip bool) []byte {
  body, err := ReadFileByte(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFileByte attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFileByte(path string, doGzip bool) ([]byte, error){
  reader, _, err := FindFile(path, doGzip)
  if err != nil {
    return nil, err
  }

  if closer, ok := reader.(io.Closer); ok {
    defer closer.Close()
  }

  var bu bytes.Buffer

  _, err = io.Copy(&bu, reader);
  if err != nil && err != io.EOF {
   return nil, fmt.Errorf("File %q failed to be read: %+q", path, err)
  }

  return bu.Bytes(), nil
}
