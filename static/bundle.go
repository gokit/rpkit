package static


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
)

type fileData struct{
  path string
  root string
  data []byte
}

var (
  assets = map[string][]string{
    
      ".tml": []string{  // all .tml assets.
        
          "interface_rpc.tml",
        
      },
    
  }

  assetFiles = map[string]fileData{
    
      
        "interface_rpc.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9d\x5f\x73\xdb\x36\x12\xc0\x9f\xc5\x4f\xb1\xe5\xa4\xad\xd4\x30\x54\xd2\xbc\x74\xd4\xd3\xcd\xa8\x69\xee\xe2\x69\xe3\x78\x1c\x67\x7a\x33\x9d\x4e\x02\x93\x90\x84\x98\x06\x14\x00\xb4\xe2\x51\xf5\xdd\x6f\x16\x00\x29\xea\xbf\x9d\x3a\x8e\x93\xac\x5f\x62\x82\x00\x76\xb1\xbb\x58\xfc\xf9\x95\x6e\xb7\x0b\x83\xa2\x80\x4c\xe5\x1c\x4e\x79\xa1\xa6\xc0\x34\x07\x56\x5a\xf5\x60\xc4\x25\xd7\xcc\xf2\x1c\x98\xcc\xc1\x8c\x55\x59\xe4\x20\x95\x85\x53\x0e\x3c\x17\xf8\xe2\xf4\x12\xc6\x4c\xe6\x05\x4f\xa3\x6e\x17\x5e\x72\x0e\x63\x6b\x27\xa6\xd7\xed\x8e\x84\x1d\x97\xa7\x69\xa6\xce\xbb\x23\x75\x26\x6c\x57\x4f\xce\x84\x85\xa1\xd2\x70\xae\x34\x07\x21\x87\x2a\x8d\x66\x33\xb8\x77\x60\x35\xf4\xfa\x90\x1e\x58\x3d\x9f\xc3\x6c\x76\xef\xe8\x6c\xe4\x0a\x8e\xce\x46\xbe\xe0\x25\xd7\x17\x22\xe3\x87\xec\x9c\xbb\x17\x8d\xe7\xf9\x3c\x12\xe7\x13\xa5\x2d\xb4\xa3\x56\x9c\x29\x69\xf9\x7b\x1b\x47\xad\x98\xcb\x4c\xe5\x42\x8e\xba\x6f\x8d\x92\x58\x30\x3c\x77\xe5\x92\xdb\x2e\xea\x88\xbf\x0b\xe5\x6a\x6a\xad\xb4\xc1\xdf\x0a\x35\x8a\xa3\xa8\x35\x9b\xbd\x2b\x95\xe5\x4e\x81\xf4\x88\xd9\xf1\x7c\x1e\x75\xa2\x28\x53\xd2\x38\x31\xdd\x2e\xfc\xc2\x0c\x6f\x6a\x95\xf3\xa1\x90\xdc\x80\x1d\x73\x38\x65\x86\x83\xc4\x52\x35\x04\xe3\x2b\x81\x56\xca\xa6\x51\x6b\xb5\x5d\x1f\x6a\x61\xcb\x83\x72\x52\x9e\x73\x3b\x56\xf9\x36\x39\x99\x3a\x9f\x14\xdc\x2e\x64\xd9\xb1\x30\x30\x12\x17\x42\x8e\x60\x70\x74\x50\xc9\x4e\xa3\xd6\x7a\x47\x7d\x88\x67\xb3\x65\x99\xe9\x6c\x86\x3e\x48\x5f\x9c\xbe\xe5\x99\x4d\xb1\x30\xf5\x6f\x62\x1c\x7e\xb7\x0b\xde\x52\x90\xa6\x69\x74\xc1\x34\x9a\xe2\xa9\xd6\x07\xf2\x82\x15\x22\x3f\xe6\xef\x4a\x6e\xec\xab\xe3\x03\xe8\x87\x8a\xe9\x21\x9f\xb6\x63\xe1\xdf\x83\xf6\x15\xa0\xd4\x22\xee\x6c\x68\xe9\x75\xdc\xd3\xf8\xdc\x55\x8a\x3b\x5e\xa1\x1f\x6e\xf0\x07\xc7\x77\x72\x39\xe1\xc6\x05\xb2\x2a\x75\xc6\x7b\x18\x7b\x68\x91\x10\x03\x37\x2c\x10\x05\x3d\x53\xea\xac\x76\x2a\x03\x21\x2d\xd7\x43\x96\x71\x37\x4f\xc6\xcc\xb9\x92\x65\x19\x37\x06\xac\x82\x5c\x0c\x87\x5c\x73\x69\x71\x8e\x32\x03\x6a\x88\x7d\x30\xc8\x58\x51\xe0\x7b\x8c\x8a\x2a\xe0\xd4\x10\x58\x30\x57\x1a\xd9\xcb\x09\xf7\xb2\x16\x12\x66\x51\xeb\x98\x9b\x89\x92\x18\x91\xd2\xb6\xc3\xdc\x49\x9f\xf8\x7f\x3b\x8b\xd7\x47\x9a\x4f\x98\xe6\xf9\xc6\x2a\xce\x2f\xc7\x1c\x43\x66\x57\x8d\x41\x96\xf1\xc9\xce\x1a\xc7\x3c\xe3\xe2\x62\x57\x8d\x23\xad\xd0\x12\x9b\xaa\xcc\xa3\xd9\x4c\x33\x39\xe2\x70\xef\x75\x02\xf7\xfc\xb8\x5d\xae\x38\x54\x03\x3d\x1a\xc8\xfc\x98\xdb\x52\x4b\x73\xf3\x6e\xec\x76\xe1\xf8\xa8\x07\x87\x0a\x06\x7a\x54\x9e\x73\x69\x8d\xcb\x97\x87\x0a\xbc\xcc\x30\x8d\x5d\x60\xf9\x5f\x5d\x60\x05\xdf\x84\xf9\xbe\x23\xe8\xe0\x99\xcb\xb0\xba\xf1\x26\x3b\x63\x23\x3f\x63\xef\x6d\x9e\xb1\xe9\x06\x01\x37\x3a\x6a\xd4\x6b\x55\x46\xc8\x26\xc7\xaa\xb4\xcb\x99\x4a\xbb\x12\x0c\x69\x7c\x5a\x6d\x56\x47\xa9\x4f\xb0\x3b\x7b\x75\x69\xeb\xde\x6a\xda\xda\x62\x84\xee\x6a\x57\xf1\x5e\xb5\xd1\xe8\x4b\xaa\x0f\xcb\xa2\x08\x0a\xc2\x04\x5f\xde\xc0\x28\x9c\x90\x3e\xc4\xdd\x1b\x1f\x0a\xce\x07\xcd\x32\xeb\x43\x09\x70\x9a\x30\x21\xfd\x48\x8c\x2f\xbb\xe0\xda\x08\x25\x31\x3f\xf0\xf7\x13\x37\x6b\xab\xf1\x65\xa1\xf5\xb6\x31\xac\xf4\xde\x87\x37\x2e\xaf\xac\x56\xf3\x31\x5e\x55\x5e\xce\x38\xab\x75\xdb\x8b\x82\x6a\xf6\xfc\x2e\x8c\x05\xab\x4b\x3e\x9f\x77\x60\x36\x03\x31\xac\xe6\x73\xfa\x8c\x99\x30\x8d\x61\x3e\x9f\xcd\xc4\x10\xf8\xbb\xfa\xe5\x89\xb2\xac\xa8\x5e\x3f\xf2\x1b\x87\xf0\xca\x97\x36\x3a\x86\xd9\x8c\x17\x06\x7f\x69\xef\xa8\x85\xe2\xb9\xcc\x7d\x75\xfc\x37\x9a\x47\x6f\x36\xda\x7d\x65\xc8\x8b\x84\x9e\xad\x5b\xc1\xed\x80\xbc\xc1\x67\x33\xf0\x8b\xff\x7a\x32\x98\x68\x75\x21\x72\xbf\xc3\x8a\xaf\x3e\xef\x63\x10\xb2\xde\x52\xd4\x69\x04\xe6\xf3\x14\x0e\x2c\xb0\xa2\x50\x53\x03\xa5\x4b\x45\xdc\x58\x76\x5a\x08\x33\x06\x06\x46\xe0\x56\x62\xa1\xad\x29\x05\xbe\xac\x94\xe5\x16\xd7\x21\x0c\x22\xc9\x79\x6e\xdc\xbe\x86\x89\x7c\x79\x79\xb9\x6a\x18\x7c\x09\x51\xb0\x3d\x06\xc2\x7c\x5e\x4e\x7f\xae\x4b\x9e\x83\x11\x23\xc9\x6c\xa9\x39\x7a\x15\xdf\x84\xda\x9b\x56\x83\xe9\x58\x64\x63\xe0\xef\x79\x56\x5a\x6e\x40\xd8\xef\x8d\xb7\xa1\x64\x05\x9c\x72\xdc\x1b\xa8\x52\xbb\xcd\x66\x0e\x6a\x38\x04\x25\x7d\xa5\xdd\x7e\xd8\xe9\xac\x4a\xf9\x61\x29\xb3\xb5\x35\xd6\xef\xcb\x22\xbf\xcf\xd7\x17\x7c\x36\x5b\x6a\x0b\x2e\x84\xfc\xf2\xe7\x77\xa7\xba\x11\x50\x0b\x85\xad\xaa\xb7\x28\x75\x9c\xae\x0d\x7e\xa8\xd5\xf9\x8d\x85\xfd\xf7\x06\xde\xaa\x53\x10\x6e\x0b\x15\xe6\x15\x30\x98\x14\xe5\x68\xe4\x83\xbc\x94\x99\x15\x4a\x26\x28\xda\x8e\x99\x85\x8c\x49\x1c\x84\xc4\x93\x4e\x89\x06\x9e\x0a\x3b\x16\x12\x98\xbc\x04\xab\x99\x34\xee\xc4\x51\xb0\x4b\xae\x13\x37\x22\x9c\x0d\xc1\x57\x8d\xb1\xaa\x61\x35\xd3\x19\x26\x83\x7a\x3f\x8e\x02\x37\x1a\xb1\x1d\xd4\xd3\x7b\xbc\xd8\xd9\xe3\xc0\x59\xd4\xf2\x41\x17\x5c\x69\xdf\xc3\x66\x77\x62\xcd\x96\x9b\x43\x8d\xd9\x35\xd0\x23\xdc\x09\x43\xbc\xd2\x26\x9e\xcf\xa3\x56\xab\x52\x71\x6d\x8b\x81\x62\x3a\xae\x3b\x3f\xab\x76\xd6\x0d\x15\xdd\x7c\x6a\x55\xca\x4a\x51\x44\xad\x6d\xf3\xcb\xd9\x4b\x37\xc3\x8c\xb9\xc3\x66\x1a\xb6\x47\x2e\x57\x79\x13\x57\xd9\xaa\x4e\xb3\x5b\x22\xec\x1a\xfb\xa9\xcd\xd3\xa6\xd2\xa9\xb9\xc4\x35\x75\xc2\xa1\xb8\x86\xa8\xf5\x6a\xe3\x4a\x6f\x63\x75\x99\x59\x6c\x89\x1b\x74\xdc\xa5\x47\xad\x31\x67\x39\xd7\x26\x0c\xd0\x3d\x44\xad\xc5\xbc\xd9\xe1\xfb\x60\xbd\x43\x3e\xdd\xa2\xac\x0e\xc9\x91\x81\xe4\x53\x10\xd2\x58\x26\xb3\x70\x7e\xe4\xf0\xec\xe4\xe4\xa8\x52\xcc\xa7\xa0\x20\xd5\xe0\xea\x81\x3d\xa3\x4a\xd5\x79\xcc\x38\xa3\x87\x23\xe7\xc2\xda\x1f\xba\x49\x0d\x33\x63\xab\xee\xed\x2b\x59\x20\x81\xda\x90\x09\x6c\x30\xe4\xfa\xe4\x09\x96\x59\xcc\x9a\x1d\xee\xc2\x09\x83\xfd\xf7\x9c\x94\x04\x9f\xbc\x88\x5e\x25\x0b\xcb\x82\xa2\xbd\xca\x7a\xc9\x22\xae\x9d\x30\x34\xf3\x6a\xc6\x6c\x06\x4e\xba\xa8\x55\x65\x10\x99\x2f\x5c\xb1\xd3\xfc\x9b\x92\x6a\xb0\x6c\x1b\x45\xee\x1a\x5d\x67\xa1\x5e\x7b\xea\x35\xaa\x4e\x81\x7f\x68\x61\x31\xdd\x69\xf8\x21\x94\x3b\x1d\x3a\x30\x8b\x00\x00\x30\xc7\xf4\xfa\xa0\xab\x64\xd1\xee\x44\x51\x4b\x0c\x9d\xb0\xd4\x39\xe4\x9b\x3e\x4e\x70\x97\x71\xea\xc2\x74\xed\xf0\xe7\x72\xc8\xdc\xb7\xd5\x69\x58\x5b\xbe\xe9\x43\x7c\xf4\xe2\xe5\x49\x0c\xdf\x7d\xb7\x5c\xfa\xec\xe9\xe0\xd7\xd8\xf7\xb9\x45\xd6\x26\x61\xd5\x69\xd5\x27\x2c\x94\xd6\x7a\x6b\x94\x74\x43\x7c\x8a\x79\xb1\x3d\x4d\xfc\xe8\x5f\x5a\x66\x4b\xf3\x0b\xab\x6e\x29\x12\x88\x95\x2c\x2e\x01\xb5\xa9\x6f\x25\xdc\xbe\x8a\xe7\x71\x02\x5b\x6e\x35\x12\x38\x67\x93\x3f\x8d\xd5\x42\x8e\xfe\x5a\xec\x84\xe6\x4e\xbf\x78\xe2\xa7\x4a\xdc\x5b\x5f\xc2\xe6\xf3\xc4\x55\x61\x13\xf1\x1a\x97\xfa\xb8\xb7\x7a\xf5\xe4\xdf\x87\x7b\x91\xde\x16\xf7\x2f\x3a\x09\x21\x14\xf7\xd6\x2f\x97\x7c\x25\x77\x56\x8b\xd7\x4f\xa8\xcd\x03\x4c\xdd\x5d\xdc\xbb\xd6\x2a\x8d\xed\xe6\x9d\x3a\xdf\xaf\xfb\xb9\xbf\xe4\x51\x0c\xee\x33\x7e\x99\xc0\x05\x2b\x8c\x0b\x2e\x77\xc2\xf7\xfe\x0c\xf3\xda\x59\x10\x2b\xbe\x4e\x40\x58\x7e\xbe\xa8\xe6\x1a\xb9\xd7\xad\x69\x98\xf9\xed\x4e\x3a\xc8\xf3\xb6\xeb\x13\x2b\xa3\x2a\xad\x79\x15\x01\x2b\xb5\xe2\xff\x3d\x18\x8c\xb8\xb4\x71\x02\xf1\xf1\xd1\x6f\x07\x27\x71\x67\x63\xa5\x60\x98\x38\x59\xf5\xcc\xe6\xea\xc1\x4e\x71\xb2\xc9\xd9\x9b\x9b\x78\xe3\x34\x5b\x2c\x79\x66\x57\xa3\x86\x76\x6b\xfe\xde\xdc\x6e\x70\x74\xf0\xc0\x39\xd9\xc9\xdb\x1e\x03\x3b\x47\xf7\xe0\xa0\x8a\x71\xb4\xde\x35\x22\xa4\xe3\x1d\xe1\x26\x62\xe8\xbb\x31\x0d\x0f\x95\x4b\x2e\xd2\x6e\x8c\xa1\x57\xc7\xbf\xfb\x6d\xdf\x37\xfd\xfd\xc7\xef\x4f\x9c\x31\xac\x82\xf8\xfe\x3e\x25\xef\xc7\xbb\x32\xcb\xab\xe3\x03\x4a\x2b\x3b\xd3\xca\xd5\x96\x9e\xc5\xcd\x64\xbd\xf4\x5c\x35\xf1\xec\xc9\x3b\xbb\xd2\xce\xdc\x4b\xba\x4a\xce\xb9\x5e\xca\xb9\x7e\xc6\xf9\x90\x84\xf3\x81\xf9\xe6\x1f\xa5\x9b\x8f\x93\x6d\xae\x12\x27\xab\xd7\xe0\x75\xa0\x5c\x30\x0d\xcc\x9d\x1d\x9f\x6a\x1d\x0e\xc8\xb8\x19\x72\xa7\xae\x8e\xdf\x18\xe1\x4f\xce\x87\x78\x40\x59\x29\xc5\x1f\xcc\x5c\x5c\x3b\x00\xa6\x79\xa6\x70\x93\xdb\xf9\xd9\x17\xd5\xca\xc0\xca\x4f\x1e\x1a\x0c\xcf\x6d\xea\x72\xcf\xb0\x1d\x4f\x98\x14\x19\x6a\xd0\x83\x6f\xef\xbf\x8b\x13\xd7\x85\x5b\xdf\xae\x91\xa7\xfe\xc3\x44\xc1\x73\x4c\x4e\x03\x1b\x4a\x21\x1b\xf3\xec\xcc\xc4\x89\x93\xba\x33\xe1\x5c\x29\xe5\xec\x4f\x3a\x57\x4c\x3b\x57\x4c\x3c\xd7\x49\x3d\x1f\x9c\x7c\x5c\xfa\x59\xf5\x92\xf3\x48\xdb\xbb\xa1\x59\x3e\xaf\x9f\xe6\x6e\x8f\x7c\x8d\x65\xa8\x01\x40\xea\x75\xa8\xea\x6c\x11\x86\x7d\xdf\x5d\xb0\x8c\xaf\x5a\x8b\x0b\x31\xb7\xa8\xdd\x10\x78\xf5\x40\x09\xdb\xb5\xfa\x62\x8b\x6b\x1d\x27\x8b\x4e\x69\x5d\xda\xb8\x2e\x79\xef\x47\xdb\xf7\x37\x2f\x7e\xbb\x5e\x46\xf2\xdc\x2e\x64\xa3\x79\x54\xdd\xa7\x6c\x43\x61\x2f\x64\x71\xe9\x5c\x1b\x80\xd4\x47\x63\x61\x4e\x48\xa0\x5f\x8b\xa3\x29\x01\x30\x02\x60\x04\xc0\x3e\x77\xf4\x41\x00\x8c\x00\x18\x01\x30\x02\x60\x5f\x2f\x00\x0b\x1d\x5f\x87\x83\xed\x6d\xb2\x84\xc3\x88\x80\x11\x01\x23\x02\x46\x04\x8c\x08\xd8\x17\x7f\x25\x40\x04\x8c\x08\x18\x11\x30\x22\x60\x44\xc0\x88\x80\x11\x01\x23\x02\x46\x04\x8c\x08\xd8\x17\xbc\x2e\x05\x02\xf6\x09\x11\x58\x69\x27\xa5\xfd\x43\xd8\xf1\xad\x80\x30\x2f\xce\x5d\x9e\x35\x70\x98\xc7\x63\x04\xc5\x08\x8a\x11\x14\x23\x28\x46\x50\xec\x4b\x86\x62\x4f\x65\xa6\x72\xae\x37\x7e\xe3\x5d\x11\xae\x89\x32\xdc\x99\x5b\x8e\x8a\xfa\xca\xde\x2a\x70\x7f\xc2\x80\x07\x82\xe6\x97\x3b\x14\x51\xef\x39\x4e\x2f\xf7\xb1\xae\xf5\xeb\xe5\x8d\x4e\xa9\x94\x6c\x7a\xc3\x97\xb5\x85\x4a\xab\x6b\xcf\xd9\x0c\xee\xb1\x40\x46\x7a\xfd\xda\xb6\xff\xe5\x36\x58\x76\x60\xe1\x21\xda\xbe\xae\x96\x3e\x7d\xef\x6a\xa3\xb9\xfc\xd1\xe0\xab\x24\x87\x09\xd4\x56\xfc\x4c\x21\x22\xf6\x76\x60\x1b\xe0\xa4\x22\x86\x0b\x5a\xb8\x1f\x14\x06\xfa\x88\xfb\xf7\x35\x66\x88\x02\x6e\x01\x1b\x26\x61\x4e\xad\xd7\x0b\x53\xe0\x9f\x73\xc5\x04\xa6\x6b\xee\xfe\x20\xc8\x68\x12\x08\xa7\xdc\xeb\x91\xc6\xab\xb4\x5b\xfe\xfa\x0e\x73\xe5\xf2\x39\xa8\x1a\x24\xd7\xda\xdf\xd4\xd4\x05\xde\x4c\x69\xc8\x0e\x53\x3c\x65\x9b\x0e\x21\x4b\x42\x96\x84\x2c\x09\x59\x12\xb2\xfc\x0a\xee\x70\x08\x59\x12\xb2\x24\x64\x49\xc8\xf2\xae\x21\xcb\x7f\x84\xb1\x88\x77\x7e\x3d\xbc\x93\x90\x25\x21\xcb\xcf\x00\x59\x26\x30\xbd\x71\x6a\x59\x5d\xe9\xb3\xa2\x20\x74\xf9\x11\x3e\xde\xbb\x0d\x70\x79\xa8\x6e\x13\x5d\x2e\xa8\xe5\x0b\xdc\x0f\x11\xba\x24\x74\x49\xe8\x92\xd0\x25\xa1\x4b\x42\x97\x84\x2e\x09\x5d\x12\xba\x24\x74\x49\xe8\x92\xd0\x25\xa1\x4b\x42\x97\x84\x2e\x09\x5d\xde\xed\x3b\x1c\x42\x97\x84\x2e\x09\x5d\x12\xba\x24\x74\x49\xe8\xf2\xb3\x44\x97\x7b\x3e\x9b\x22\xb2\x49\x64\x93\xc8\x26\x91\xcd\x0f\x23\x9b\x1f\x8d\x5d\x1e\xc8\xdb\xfc\xe6\xd2\x49\x23\x6e\x49\xdc\x92\xb8\x25\x71\x4b\xe2\x96\x5f\x1f\xb7\xfc\x95\x7f\x38\xb7\xcc\x79\x83\x5b\xfa\x1d\x67\xce\x2c\x73\x6e\xaa\x26\xe9\x8d\xb1\xcb\x4a\xd1\xa6\x47\x7c\x59\x5b\xa8\xf4\x38\x5c\x1e\xb7\x2b\xcb\xb6\x1b\xae\x39\xb9\x9c\xf0\x23\x65\xd6\x09\x4c\xc7\x73\xcc\x2d\xb4\x73\xa0\x47\x66\x60\xd1\x1d\x1b\x51\x67\xe5\x86\x7d\xed\xb7\xa1\xd2\xe0\x97\xc4\x1f\x3d\x3a\x5f\x31\x32\xad\x9c\x47\xc8\xf4\x93\x22\xd3\x9c\x6f\x46\xa6\x61\xe6\xdd\x04\x32\xd5\x6b\xee\xf6\x9b\x66\xdc\x85\xd6\x38\x33\xe8\x91\x86\xd9\xed\x4e\xc2\xfb\xd1\xe5\x47\xf9\xcb\xb4\x09\x38\xd5\xae\xfb\x07\x6a\x9b\x8d\xe8\xaf\xd4\x12\x37\x25\x6e\xfa\x19\x72\xd3\x96\xbf\xf8\xd3\xe9\x2f\x2a\xbf\x4c\x9f\x14\xca\xf0\xea\x06\x86\x70\x2a\xe1\x54\xc2\xa9\x84\x53\x09\xa7\x12\x4e\xbd\x23\x69\x85\x70\x2a\xe1\x54\xc2\xa9\x84\x53\x09\xa7\xee\xc3\xa9\x7e\x43\x4f\x4c\xf5\xee\xac\x61\xb7\xc3\x54\x07\x32\xf7\x9f\x69\xde\x0e\x53\x1d\xc8\xbc\xfa\x2c\xd4\x41\x55\xc2\xa9\x84\x53\x09\xa7\x12\x4e\x25\x9c\x4a\x38\x95\x70\xea\xa7\xc2\xa9\xf4\x99\x2e\x7d\xa6\xdb\xf8\x4c\x97\xf0\xf3\xdd\xc1\xcf\x7b\xbe\xd8\xbd\x15\x3e\x3d\x6d\x86\xc6\xdd\x82\xd5\x66\xef\x17\xc2\xdb\x60\xf5\x9e\x96\x6b\xb0\x9a\xbe\x02\x26\x9a\x4d\x34\x9b\x68\x36\xd1\x6c\xa2\xd9\x44\xb3\x89\x66\x13\xcd\x26\x9a\x4d\x34\x9b\x68\x36\xd1\x6c\xa2\xd9\x44\xb3\xef\x18\xcd\x9e\x12\xd0\xbe\x7b\xcb\xd8\x2d\x03\xed\x5b\xfe\x5a\xb8\x41\xb6\xe9\x7f\xd3\x4a\x90\x9b\x20\x37\x41\x6e\x82\xdc\x04\xb9\x09\x72\x13\xe4\x26\xc8\x4d\x90\x9b\x20\xf7\x56\x6f\x12\xe4\xbe\x99\xbf\x85\xbd\x95\x74\x5f\xa1\xf9\xfa\xb7\xd9\x57\x1b\x0a\x21\x71\x42\xe2\x84\xc4\x09\x89\x13\x12\xa7\x4b\x3f\x42\xe2\x84\xc4\x09\x89\x13\x12\x27\x24\x4e\x48\x9c\x90\x38\x21\x71\x42\xe2\x84\xc4\x09\x89\xdf\x0e\x12\xff\x08\x68\xfb\x95\x15\x85\xd9\xc5\xa5\x6f\x54\xa0\xbb\x2d\x16\x45\x71\xcc\x73\xa1\x79\xb6\xb8\xd6\xb4\xba\xe4\xdd\x21\x2b\x0c\xc7\x50\x0d\xe7\x63\x77\x1b\x2f\x0c\x30\xd0\x55\x7d\xe3\x02\x33\x9c\x8d\x9b\x3d\xb5\x7d\x65\x69\x3b\x70\xaa\x54\xd1\xb8\x19\x70\x2f\xfe\xdd\x87\xc7\x0f\x1f\xe1\xa1\xd3\x3d\xfe\x0b\x1f\x7f\x0a\xc7\x7b\x61\x6e\x46\x9d\x45\x3f\x7b\x94\xe9\xf7\x9b\xb3\xec\x84\x9f\x4f\x94\x66\xfa\xb2\xd6\xe2\xef\xbf\x37\xd5\x3b\xe2\xfa\x9c\x49\x2e\x6d\x55\x2f\xa8\x6f\xce\xc4\xa4\x2a\x32\x90\xa9\x89\xe0\xa6\x52\xd9\x35\x7f\x52\x08\x2e\xad\xbb\x8e\x18\x8a\xf7\x20\x8c\x29\xb9\xbb\x2b\x86\x89\x32\x46\x9c\x16\xbc\x1e\x90\x8b\x04\x21\x61\xa4\x1e\xa5\x3f\xc1\x74\xcc\x25\x30\xac\x85\x96\x71\xe7\x7a\x77\x27\xec\xd4\xf1\x2a\xfa\x0b\x27\x61\xa0\x94\x39\x37\x42\xf3\x3c\x85\x97\x65\x36\x86\x31\x33\xf0\xf8\xe1\x8f\x09\x3c\x7e\xf8\x38\xc1\x5e\x51\xfc\xe3\x87\x8f\x2a\x63\x2d\x69\xdd\x16\x32\x5c\x51\x78\x5d\x3b\x4b\x4f\x68\xbe\x4c\x4d\x2e\x71\x29\xfc\x41\x48\xff\x90\x3e\xc1\xf5\xaa\x36\x59\xdf\x2f\xba\x9a\xbf\x5b\xbe\xeb\x48\xe0\x42\x30\xf8\xf3\xaf\x95\x0b\x90\xea\xb2\xb7\xb1\x3a\x0b\xb9\xd2\xe5\xc6\x65\x39\xac\xc8\xab\x95\x51\xb0\x13\xb5\xbc\x04\xbc\x86\xbe\x6b\xd1\xed\xe2\x5a\xbb\x62\xfc\x29\xf3\xff\xf5\x08\x3b\x55\xa5\x05\xa9\xc2\x12\x8c\x45\x4e\xbd\x34\x5a\x5f\x49\x42\x14\xb9\xc1\x3c\xd5\xfa\x95\xe1\xbf\x33\x3c\xd4\x04\x58\x85\xfb\xc9\x50\xe5\x3b\x34\x12\x46\x88\xb3\xf6\x6a\x9a\xdf\x7c\x4f\x54\x45\x6d\x02\xe7\xdc\x18\x36\xe2\xe0\x53\xb9\xbf\x59\x76\x4a\xe1\x2b\xcb\xb6\xa4\xf9\xce\xcc\xef\x94\x34\x37\x4e\xa2\x13\xb6\x50\x4e\x73\x93\x3e\x71\x71\xed\x24\xf9\x02\xbf\x90\xb9\xbb\x66\x7c\x7c\x8e\xbd\xf7\x9d\x90\xaa\xc0\x6b\xd2\xaf\x74\x5a\xdb\xac\x61\x5f\xcb\xfb\xc2\x97\xdc\xb6\xe3\x70\xc0\x7c\x70\x72\x39\x71\x1b\x42\x36\x99\x14\x22\x63\xb8\x52\x75\x51\x39\xb7\xed\xcb\x99\x65\x6e\x74\x3f\xa2\x57\xb1\x38\x7d\xce\xb4\x19\xb3\xa2\xad\xb9\xe9\xfc\x1c\x85\xfb\xf1\x1f\x71\x2e\x56\xe9\x3a\x88\x6f\x63\xe3\xd5\xc3\x4a\xa1\x46\xe9\x91\x16\xd2\x0e\xdb\x71\x29\x1d\x5c\x77\xbc\x48\xe6\x21\xe6\x2a\xb0\xe8\xee\x01\x7d\xd1\xb7\xf7\xdf\x55\x9b\x39\xb7\xf5\x42\x79\x9d\xfa\x1e\x7a\xcd\x90\x8b\xdb\xe7\x27\xc1\x5f\xf0\x06\x2b\xf5\x62\xb4\x44\xfc\x26\x6a\xd5\x7b\xd4\xea\x05\x2e\xd3\x6f\xa2\xd6\xf3\x25\xaf\x56\x2f\x83\x5d\x7d\x85\xad\xbe\x5d\xd4\xb6\x2c\x7e\x13\xcd\xa3\xff\x07\x00\x00\xff\xff\x09\x00\x0d\x0e\x0f\xd6\x00\x00"),
          path: "interface_rpc.tml",
          root: "interface_rpc.tml",
        },
      
    
  }
)

//==============================================================================

// FilesFor returns all files that use the provided extension, returning a
// empty/nil slice if none is found.
func FilesFor(ext string) []string {
  return assets[ext]
}

// MustFindFile calls FindFile to retrieve file reader with path else panics.
func MustFindFile(path string, doGzip bool) (io.Reader, int64) {
  reader, size, err := FindFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return reader, size
}

// FindDecompressedGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindDecompressedGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, true)
}

// MustFindDecompressedGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindDecompressedGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindDecompressedGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, false)
}

// MustFindGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFile returns a io.Reader by seeking the giving file path if it exists.
func FindFile(path string, doGzip bool) (io.Reader, int64, error){
	reader, size, err := FindFileReader(path)
	if err != nil {
		return nil, size, err
	}

	if !doGzip {
		return reader, size, nil
	}

  gzr, err := gzip.NewReader(reader)
	return gzr, size, err
}

// MustFindFileReader returns bytes.Reader for path else panics.
func MustFindFileReader(path string) (*bytes.Reader, int64){
	reader, size, err := FindFileReader(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFileReader returns a io.Reader by seeking the giving file path if it exists.
func FindFileReader(path string) (*bytes.Reader, int64, error){
  item, ok := assetFiles[path]
  if !ok {
    return nil,0, fmt.Errorf("File %q not found in file system", path)
  }

  return bytes.NewReader(item.data), int64(len(item.data)), nil
}

// MustReadFile calls ReadFile to retrieve file content with path else panics.
func MustReadFile(path string, doGzip bool) string {
  body, err := ReadFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFile attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFile(path string, doGzip bool) (string, error){
  body, err := ReadFileByte(path, doGzip)
  return string(body), err
}

// MustReadFileByte calls ReadFile to retrieve file content with path else panics.
func MustReadFileByte(path string, doGzip bool) []byte {
  body, err := ReadFileByte(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFileByte attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFileByte(path string, doGzip bool) ([]byte, error){
  reader, _, err := FindFile(path, doGzip)
  if err != nil {
    return nil, err
  }

  if closer, ok := reader.(io.Closer); ok {
    defer closer.Close()
  }

  var bu bytes.Buffer

  _, err = io.Copy(&bu, reader);
  if err != nil && err != io.EOF {
   return nil, fmt.Errorf("File %q failed to be read: %+q", path, err)
  }

  return bu.Bytes(), nil
}
